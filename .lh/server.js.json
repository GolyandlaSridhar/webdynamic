{
    "sourceFile": "server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 82,
            "patches": [
                {
                    "date": 1686911148528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686911155142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,10 +117,10 @@\n  *          description: \"Successfully logged in!\"\n  * \n  */\n // routes\n-require('./app/routes/auth.routes')(app);\n-require('./app/routes/user.routes')(app);\n+require('./app/routes/auth.routes')(app)\n+require('./app/routes/user.routes')(app)\n \n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1686911212768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,27 +100,27 @@\n /**\n  * @swagger\n  * /api/auth/signin:\n  *  post:\n- *      summary: This api is used to login to the application with valid credentials,\n- *      description: This api is used to login to the application with valid credentials,\n+ *      summary: This api is used to register the user with the application,\n+ *      description: This api is used to register the user with the application,\n  *      requestBody:\n  *        required: true\n  *        content:\n  *          application/json:\n  *            schemas:\n  *              username:\n  *                  type: string\n  *              password:\n- *                  type: string\n+ *                \n  *      response:\n  *        200:\n- *          description: \"Successfully logged in!\"\n+ *          description: \"Successfully added!\"\n  * \n  */\n // routes\n-require('./app/routes/auth.routes')(app)\n-require('./app/routes/user.routes')(app)\n+require(\"./routes/auth.routes\")(app)\n+require(\"./routes/user.routes\")(app)\n \n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1686911221293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,25 +100,26 @@\n /**\n  * @swagger\n  * /api/auth/signin:\n  *  post:\n- *      summary: This api is used to register the user with the application,\n- *      description: This api is used to register the user with the application,\n+ *      summary: This api is used to login to the application with valid credentials,\n+ *      description: This api is used to login to the application with valid credentials,\n  *      requestBody:\n  *        required: true\n  *        content:\n  *          application/json:\n  *            schemas:\n  *              username:\n  *                  type: string\n  *              password:\n- *                \n+ *                  type: string\n  *      response:\n  *        200:\n- *          description: \"Successfully added!\"\n+ *          description: \"Successfully logged in!\"\n  * \n  */\n // routes\n+app.\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n \n // set port, listen for requests\n"
                },
                {
                    "date": 1686911248711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,11 +117,10 @@\n  *          description: \"Successfully logged in!\"\n  * \n  */\n // routes\n-app.\n-require(\"./routes/auth.routes\")(app)\n-require(\"./routes/user.routes\")(app)\n+// require(\"./routes/auth.routes\")(app)\n+// require(\"./routes/user.routes\")(app)\n \n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1686911259506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,21 @@\n  */\n // routes\n // require(\"./routes/auth.routes\")(app)\n // require(\"./routes/user.routes\")(app)\n+app.use(\"api/auth/signin\", require(\"./routes/auth.routes\"))\n+app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n+app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n+app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n+app.use(\"api/test/all\", require(\"./routes/user.routes\"))\n+app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n+app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n+app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n+app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n+app.use(\"api/test/operationaladmin\", require(\"./routes/user.routes\"))\n+app.use(\"api/test/admin\", require(\"./routes/user.routes\"))\n+\n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n   console.log(`Server is running on port ${PORT}.`)\n"
                },
                {
                    "date": 1686911375836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,20 +119,20 @@\n  */\n // routes\n // require(\"./routes/auth.routes\")(app)\n // require(\"./routes/user.routes\")(app)\n-app.use(\"api/auth/signin\", require(\"./routes/auth.routes\"))\n-app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n-app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n-app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n+// app.use(\"api/auth/signin\", require(\"./routes/auth.routes\"))\n+// app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n+// app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n+// app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"api/test/all\", require(\"./routes/user.routes\"))\n-app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n-app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n-app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n-app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n-app.use(\"api/test/operationaladmin\", require(\"./routes/user.routes\"))\n-app.use(\"api/test/admin\", require(\"./routes/user.routes\"))\n+// app.use(\"api/test/all\", require(\"./routes/user.routes\"))\n+// app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n+// app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n+// app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n+// app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n+// app.use(\"api/test/operationaladmin\", require(\"./routes/user.routes\"))\n+// app.use(\"api/test/admin\", require(\"./routes/user.routes\"))\n \n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1686911381853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,10 +117,10 @@\n  *          description: \"Successfully logged in!\"\n  * \n  */\n // routes\n-// require(\"./routes/auth.routes\")(app)\n-// require(\"./routes/user.routes\")(app)\n+require(\"./routes/auth.routes\")(app)\n+require(\"./routes/user.routes\")(app)\n // app.use(\"api/auth/signin\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n"
                },
                {
                    "date": 1686911433493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n const express = require(\"express\")\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n+\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911440146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\")\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n-\n+const \n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911447129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\")\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n-const \n+const { auth }\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911453256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\")\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n-const { auth }\n+const { authRouter } = requi\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911461387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\")\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n-const { authRouter } = requi\n+const { authRouter } = require(\"./\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911475727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\")\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n-const { authRouter } = require(\"./\")\n+const { authRouter } = require(\"./r\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911481475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\")\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n-const { authRouter } = require(\"./r\")\n+const { authRouter } = require(\"./routes/auth.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911487199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n const { authRouter } = require(\"./routes/auth.routes\")\n+const \n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911493731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n const { authRouter } = require(\"./routes/auth.routes\")\n-const \n+const userRoutes = \n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911500588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n const { authRouter } = require(\"./routes/auth.routes\")\n-const userRoutes = \n+const userRoutes = require(\"./\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911506575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n const { authRouter } = require(\"./routes/auth.routes\")\n-const userRoutes = require(\"./\")\n+const userRoutes = require(\"./routes/user.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911518087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,10 +119,10 @@\n  *          description: \"Successfully logged in!\"\n  * \n  */\n // routes\n-require(\"./routes/auth.routes\")(app)\n-require(\"./routes/user.routes\")(app)\n+// require(\"./routes/auth.routes\")(app)\n+// require(\"./routes/user.routes\")(app)\n // app.use(\"api/auth/signin\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n"
                },
                {
                    "date": 1686911524302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-// app.use(\"api/test/all\", require(\"./routes/user.routes\"))\n+app.use(\"api/test/all\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686911531131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"api/test/all\", require(\"./routes/user.routes\"))\n+app.use(\"api/test/all\", )\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686911645847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n const { authRouter } = require(\"./routes/auth.routes\")\n-const userRoutes = require(\"./routes/user.routes\")\n+const { userRoutes = require(\"./routes/user.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n@@ -126,9 +126,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"api/test/all\", )\n+app.use(\"api/test/all\", userRoutes)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686911651857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n const { authRouter } = require(\"./routes/auth.routes\")\n-const { userRoutes = require(\"./routes/user.routes\")\n+const { userRoutes } = require(\"./routes/user.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911678804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n const { authRouter } = require(\"./routes/auth.routes\")\n-const { userRoutes } = require(\"./routes/user.routes\")\n+const { userRoutes = require(\"./routes/user.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911686186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n const express = require(\"express\")\n const cors = require(\"cors\")\n const cookieSession = require(\"cookie-session\")\n const db = require(\"./models\")\n-const { authRouter } = require(\"./routes/auth.routes\")\n-const { userRoutes = require(\"./routes/user.routes\")\n+const authRouter = require(\"./routes/auth.routes\")\n+const userRoutes = require(\"./routes/user.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\")\n"
                },
                {
                    "date": 1686911778940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"api/test/all\", userRoutes)\n+app.use(\"/all\", userRoutes)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686911935420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/all\", userRoutes)\n+app.use(\"/api/test/\", userRoutes)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686911948168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/api/test/\", userRoutes)\n+app.use(\"/api/test\", userRoutes)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686912047039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/api/test\", userRoutes)\n+app.use(\"/api/test/\", userRoutes)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686916781414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/api/test/\", userRoutes)\n+app.use(\"/api/test\", userRoutes)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686917132875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n const authRouter = require(\"./routes/auth.routes\")\n const userRoutes = require(\"./routes/user.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n+require \n \n const dbConfig = require(\"./config/db.config\")\n \n const app = express()\n"
                },
                {
                    "date": 1686917145155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const authRouter = require(\"./routes/auth.routes\")\n const userRoutes = require(\"./routes/user.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n-require \n+require userController = \n \n const dbConfig = require(\"./config/db.config\")\n \n const app = express()\n"
                },
                {
                    "date": 1686917152838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const authRouter = require(\"./routes/auth.routes\")\n const userRoutes = require(\"./routes/user.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n-require userController = \n+const userController = req\n \n const dbConfig = require(\"./config/db.config\")\n \n const app = express()\n"
                },
                {
                    "date": 1686917159554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const authRouter = require(\"./routes/auth.routes\")\n const userRoutes = require(\"./routes/user.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n-const userController = req\n+const userController = require(\"./controllers\")\n \n const dbConfig = require(\"./config/db.config\")\n \n const app = express()\n"
                },
                {
                    "date": 1686917179354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const authRouter = require(\"./routes/auth.routes\")\n const userRoutes = require(\"./routes/user.routes\")\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n const swaggerUiExpress = require(\"swagger-ui-express\")\n-const userController = require(\"./controllers\")\n+const userController = require(\"./controllers/user.controller\")\n \n const dbConfig = require(\"./config/db.config\")\n \n const app = express()\n@@ -127,9 +127,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/api/test\", userRoutes)\n+app.use(\"/api/test\", userRoutes, userController.)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686917277549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,14 +122,15 @@\n  */\n // routes\n // require(\"./routes/auth.routes\")(app)\n // require(\"./routes/user.routes\")(app)\n+\n // app.use(\"api/auth/signin\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/api/test\", userRoutes, userController.)\n+app.use(\"/api/test\", userRoutes, userController.allAccess)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686918737096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/api/test\", userRoutes, userController.allAccess)\n+app.use(\"/test\", userRoutes, userController.allAccess)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686918821268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/test\", userRoutes, userController.allAccess)\n+app.use(\"/test\", userRoutes)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686918966331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/test\", userRoutes)\n+app.use(\"/test\", userRoutes, userController.allAccess)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686918976440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/test\", userRoutes, userController.allAccess)\n+app.use(\"/test/all\", userRoutes, userController.allAccess)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686919005522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/test/all\", userRoutes, userController.allAccess)\n+app.use(\"/api/test/\", userRoutes, userController.allAccess)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686919035088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/api/test/\", userRoutes, userController.allAccess)\n+app.use(\"/test\", userRoutes, userController.allAccess)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686919869653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/test\", userRoutes, userController.allAccess)\n+app.use(\"/apitest\", userRoutes, userController.allAccess)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686919876670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n // app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n // app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n \n-app.use(\"/apitest\", userRoutes, userController.allAccess)\n+app.use(\"/api/test\", userRoutes, userController.allAccess)\n // app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n // app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n"
                },
                {
                    "date": 1686920986054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,51 @@\n-const express = require(\"express\")\n-const cors = require(\"cors\")\n-const cookieSession = require(\"cookie-session\")\n-const db = require(\"./models\")\n-const authRouter = require(\"./routes/auth.routes\")\n-const userRoutes = require(\"./routes/user.routes\")\n+const express = require(\"express\");\n+const cors = require(\"cors\");\n+const cookieSession = require(\"cookie-session\");\n+const db = require(\"./models\");\n const swaggerJsDoc = require(\"swagger-jsdoc\")\n-const swaggerUiExpress = require(\"swagger-ui-express\")\n-const userController = require(\"./controllers/user.controller\")\n+const swaggerUIExpress = require(\"swagger-ui-express\")\n \n-const dbConfig = require(\"./config/db.config\")\n+const dbConfig = require(\"./config/db.config\");\n+const swaggerUiExpress = require(\"swagger-ui-express\");\n \n-const app = express()\n+const app = express();\n \n var corsOptions = {\n   origin: \"http://localhost:4001\"\n-}\n+};\n \n-app.use(cors(corsOptions))\n+app.use(cors(corsOptions));\n \n // parse requests of content-type - application/json\n-app.use(express.json())\n+app.use(express.json());\n \n // parse requests of content-type - application/x-www-form-urlencoded\n-app.use(express.urlencoded({ extended: true }))\n+app.use(express.urlencoded({ extended: true }));\n \n app.use(\n   cookieSession({\n     name: \"sridhar-session\",\n     secret: \"COOKIE_SECRET\", // should use as secret environment variable\n     httpOnly: true\n   })\n-)\n+);\n \n-const Role = db.role\n+const Role = db.role;\n \n db.mongoose\n   .connect(`mongodb://${dbConfig.HOST}:${dbConfig.PORT}/${dbConfig.DB}`, {\n     useNewUrlParser: true,\n     useUnifiedTopology: true\n   })\n   .then(() => {\n-    console.log(\"Successfully connect to MongoDB.\")\n-    initial()\n+    console.log(\"Successfully connect to MongoDB.\");\n+    initial();\n   })\n   .catch(err => {\n-    console.error(\"Connection error\", err)\n-    process.exit()\n-  })\n+    console.error(\"Connection error\", err);\n+    process.exit();\n+  });\n \n // swagger\n const options = {\n   definition: {\n@@ -75,9 +73,9 @@\n \n const specs = swaggerJsDoc(options)\n app.use(\n   \"/api-docs\",\n-  swaggerUiExpress.serve,\n+  swaggerUIExpress.serve,\n   swaggerUiExpress.setup(\n     specs, \n     { explorer: true },\n     \"https://cdn.jsdelivr.net/npm/swagger-ui-themes@3.0.0/themes/3.x/theme-newspaper.css\"  \n@@ -85,8 +83,23 @@\n )\n \n /**\n  * @swagger\n+ *  components:\n+ *    schemas:\n+ *      signin:\n+ *        type: object,\n+ *        propertise:\n+ *          firstname: \n+ *            type: string\n+ *          lastname:\n+ *            type: string\n+ *          userna\n+ *          \n+ */\n+\n+/**\n+ * @swagger\n  * /:\n  *  get:\n  *      summary: This api is use to check the Get method is working or not,\n  *      description: This api is use to check the Get method is working or not,\n@@ -96,115 +109,99 @@\n  */\n \n // simple route\n app.get(\"/\", (req, res) => {\n-  res.json({ message: \"Welcome to my application.\" })\n-})\n+  res.json({ message: \"Welcome to my application.\" });\n+});\n \n /**\n  * @swagger\n  * /api/auth/signin:\n  *  post:\n- *      summary: This api is used to login to the application with valid credentials,\n- *      description: This api is used to login to the application with valid credentials,\n+ *      summary: This api is used to register the user with the application,\n+ *      description: This api is used to register the user with the application,\n  *      requestBody:\n- *        required: true\n+ *        required:true\n  *        content:\n  *          application/json:\n  *            schemas:\n- *              username:\n- *                  type: string\n- *              password:\n- *                  type: string\n+ *              $ref: \"#components/schemas/signin\"\n  *      response:\n  *        200:\n- *          description: \"Successfully logged in!\"\n+ *          description: \"Successfully added!\"\n  * \n  */\n // routes\n-// require(\"./routes/auth.routes\")(app)\n-// require(\"./routes/user.routes\")(app)\n+require(\"./routes/auth.routes\")(app);\n+require(\"./routes/user.routes\")(app);\n \n-// app.use(\"api/auth/signin\", require(\"./routes/auth.routes\"))\n-// app.use(\"api/auth/signup\", require(\"./routes/auth.routes\"))\n-// app.use(\"api/auth/signout\", require(\"./routes/auth.routes\"))\n-// app.use(\"api/auth/refreshToken\", require(\"./routes/auth.routes\"))\n-\n-app.use(\"/api/test\", userRoutes, userController.allAccess)\n-// app.use(\"api/test/user\", require(\"./routes/user.routes\"))\n-// app.use(\"api/test/branchadmin\", require(\"./routes/user.routes\"))\n-// app.use(\"api/test/superadmin\", require(\"./routes/user.routes\"))\n-// app.use(\"api/test/staffaccount\", require(\"./routes/user.routes\"))\n-// app.use(\"api/test/operationaladmin\", require(\"./routes/user.routes\"))\n-// app.use(\"api/test/admin\", require(\"./routes/user.routes\"))\n-\n // set port, listen for requests\n-const PORT = process.env.PORT || 4000\n+const PORT = process.env.PORT || 4000;\n app.listen(PORT, () => {\n-  console.log(`Server is running on port ${PORT}.`)\n-})\n+  console.log(`Server is running on port ${PORT}.`);\n+});\n \n function initial() {\n   Role.estimatedDocumentCount((err, count) => {\n     if (!err && count === 0) {\n       new Role({\n         name: \"user\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err)\n+          console.log(\"error\", err);\n         }\n \n-        console.log(\"added 'user' to roles collection\")\n-      })\n+        console.log(\"added 'user' to roles collection\");\n+      });\n \n       new Role({\n         name: \"branchadmin\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err)\n+          console.log(\"error\", err);\n         }\n \n-        console.log(\"added 'branchadmin' to roles collection\")\n-      })\n+        console.log(\"added 'branchadmin' to roles collection\");\n+      });\n \n       new Role({\n         name: \"admin\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err)\n+          console.log(\"error\", err);\n         }\n \n-        console.log(\"added 'admin' to roles collection\")\n-      })\n+        console.log(\"added 'admin' to roles collection\");\n+      });\n \n       new Role({\n         name: \"superadmin\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err)\n+          console.log(\"error\", err);\n         }\n \n-        console.log(\"added 'superadmin' to roles collection\")\n-      })\n+        console.log(\"added 'superadmin' to roles collection\");\n+      });\n \n       new Role({\n         name: \"staffaccount\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err)\n+          console.log(\"error\", err);\n         }\n \n-        console.log(\"added 'staffaccount' to roles collection\")\n-      })\n+        console.log(\"added 'staffaccount' to roles collection\");\n+      });\n \n       new Role({\n         name: \"operationaladmin\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err)\n+          console.log(\"error\", err);\n         }\n \n-        console.log(\"added 'operationaladmin' to roles collection\")\n-      })\n+        console.log(\"added 'operationaladmin' to roles collection\");\n+      });\n     }\n-  })\n+  });\n }\n"
                },
                {
                    "date": 1686921011058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,9 @@\n const express = require(\"express\");\n const cors = require(\"cors\");\n const cookieSession = require(\"cookie-session\");\n-const db = require(\"./models\");\n-const swaggerJsDoc = require(\"swagger-jsdoc\")\n-const swaggerUIExpress = require(\"swagger-ui-express\")\n \n const dbConfig = require(\"./config/db.config\");\n-const swaggerUiExpress = require(\"swagger-ui-express\");\n \n const app = express();\n \n var corsOptions = {\n@@ -29,8 +25,9 @@\n     httpOnly: true\n   })\n );\n \n+const db = require(\"./models\");\n const Role = db.role;\n \n db.mongoose\n   .connect(`mongodb://${dbConfig.HOST}:${dbConfig.PORT}/${dbConfig.DB}`, {\n@@ -45,92 +42,13 @@\n     console.error(\"Connection error\", err);\n     process.exit();\n   });\n \n-// swagger\n-const options = {\n-  definition: {\n-    openapi: \"3.1.0\",\n-    info: {\n-      title: \"My Application express api with swagger\",\n-      version: \"1.0.0\",\n-      description: \"This is a simple CRUD API application made with Express and documented with Swagger\",\n-      licence: {\n-        name: \"MIT\"\n-      },\n-      contact: {\n-        name: \"Sridhar G\",\n-        email: \"goly.sridhar@gmail.com\"\n-      }\n-    },\n-    servers: [\n-      {\n-        url: \"http://localhost:4000\"\n-      }\n-    ]\n-  },\n-  apis: [\"./server.js\"]\n-}\n-\n-const specs = swaggerJsDoc(options)\n-app.use(\n-  \"/api-docs\",\n-  swaggerUIExpress.serve,\n-  swaggerUiExpress.setup(\n-    specs, \n-    { explorer: true },\n-    \"https://cdn.jsdelivr.net/npm/swagger-ui-themes@3.0.0/themes/3.x/theme-newspaper.css\"  \n-  )\n-)\n-\n-/**\n- * @swagger\n- *  components:\n- *    schemas:\n- *      signin:\n- *        type: object,\n- *        propertise:\n- *          firstname: \n- *            type: string\n- *          lastname:\n- *            type: string\n- *          userna\n- *          \n- */\n-\n-/**\n- * @swagger\n- * /:\n- *  get:\n- *      summary: This api is use to check the Get method is working or not,\n- *      description: This api is use to check the Get method is working or not,\n- *      responses:\n- *        200:\n- *          description: To test Get method\n- */\n-\n // simple route\n app.get(\"/\", (req, res) => {\n-  res.json({ message: \"Welcome to my application.\" });\n+  res.json({ message: \"Welcome to bezkoder application.\" });\n });\n \n-/**\n- * @swagger\n- * /api/auth/signin:\n- *  post:\n- *      summary: This api is used to register the user with the application,\n- *      description: This api is used to register the user with the application,\n- *      requestBody:\n- *        required:true\n- *        content:\n- *          application/json:\n- *            schemas:\n- *              $ref: \"#components/schemas/signin\"\n- *      response:\n- *        200:\n- *          description: \"Successfully added!\"\n- * \n- */\n // routes\n require(\"./routes/auth.routes\")(app);\n require(\"./routes/user.routes\")(app);\n \n"
                },
                {
                    "date": 1686921018394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     httpOnly: true\n   })\n );\n \n-const db = require(\"./models\");\n+\n const Role = db.role;\n \n db.mongoose\n   .connect(`mongodb://${dbConfig.HOST}:${dbConfig.PORT}/${dbConfig.DB}`, {\n"
                },
                {
                    "date": 1686921025820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n const express = require(\"express\");\n const cors = require(\"cors\");\n const cookieSession = require(\"cookie-session\");\n+const db = require(\"./models\");\n \n const dbConfig = require(\"./config/db.config\");\n \n const app = express();\n"
                },
                {
                    "date": 1686921051495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,126 +1,125 @@\n-const express = require(\"express\");\n-const cors = require(\"cors\");\n-const cookieSession = require(\"cookie-session\");\n-const db = require(\"./models\");\n+const express = require(\"express\")\n+const cors = require(\"cors\")\n+const cookieSession = require(\"cookie-session\")\n+const db = require(\"./models\")\n+const dbConfig = require(\"./config/db.config\")\n \n-const dbConfig = require(\"./config/db.config\");\n+const app = express()\n \n-const app = express();\n-\n var corsOptions = {\n   origin: \"http://localhost:4001\"\n-};\n+}\n \n-app.use(cors(corsOptions));\n+app.use(cors(corsOptions))\n \n // parse requests of content-type - application/json\n-app.use(express.json());\n+app.use(express.json())\n \n // parse requests of content-type - application/x-www-form-urlencoded\n-app.use(express.urlencoded({ extended: true }));\n+app.use(express.urlencoded({ extended: true }))\n \n app.use(\n   cookieSession({\n     name: \"sridhar-session\",\n     secret: \"COOKIE_SECRET\", // should use as secret environment variable\n     httpOnly: true\n   })\n-);\n+)\n \n \n-const Role = db.role;\n+const Role = db.role\n \n db.mongoose\n   .connect(`mongodb://${dbConfig.HOST}:${dbConfig.PORT}/${dbConfig.DB}`, {\n     useNewUrlParser: true,\n     useUnifiedTopology: true\n   })\n   .then(() => {\n-    console.log(\"Successfully connect to MongoDB.\");\n-    initial();\n+    console.log(\"Successfully connect to MongoDB.\")\n+    initial()\n   })\n   .catch(err => {\n-    console.error(\"Connection error\", err);\n-    process.exit();\n-  });\n+    console.error(\"Connection error\", err)\n+    process.exit()\n+  })\n \n // simple route\n app.get(\"/\", (req, res) => {\n-  res.json({ message: \"Welcome to bezkoder application.\" });\n-});\n+  res.json({ message: \"Welcome to bezkoder application.\" })\n+})\n \n // routes\n-require(\"./routes/auth.routes\")(app);\n-require(\"./routes/user.routes\")(app);\n+require(\"./routes/auth.routes\")(app)\n+require(\"./routes/user.routes\")(app)\n \n // set port, listen for requests\n-const PORT = process.env.PORT || 4000;\n+const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n-  console.log(`Server is running on port ${PORT}.`);\n-});\n+  console.log(`Server is running on port ${PORT}.`)\n+})\n \n function initial() {\n   Role.estimatedDocumentCount((err, count) => {\n     if (!err && count === 0) {\n       new Role({\n         name: \"user\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err);\n+          console.log(\"error\", err)\n         }\n \n-        console.log(\"added 'user' to roles collection\");\n-      });\n+        console.log(\"added 'user' to roles collection\")\n+      })\n \n       new Role({\n         name: \"branchadmin\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err);\n+          console.log(\"error\", err)\n         }\n \n-        console.log(\"added 'branchadmin' to roles collection\");\n-      });\n+        console.log(\"added 'branchadmin' to roles collection\")\n+      })\n \n       new Role({\n         name: \"admin\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err);\n+          console.log(\"error\", err)\n         }\n \n-        console.log(\"added 'admin' to roles collection\");\n-      });\n+        console.log(\"added 'admin' to roles collection\")\n+      })\n \n       new Role({\n         name: \"superadmin\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err);\n+          console.log(\"error\", err)\n         }\n \n-        console.log(\"added 'superadmin' to roles collection\");\n-      });\n+        console.log(\"added 'superadmin' to roles collection\")\n+      })\n \n       new Role({\n         name: \"staffaccount\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err);\n+          console.log(\"error\", err)\n         }\n \n-        console.log(\"added 'staffaccount' to roles collection\");\n-      });\n+        console.log(\"added 'staffaccount' to roles collection\")\n+      })\n \n       new Role({\n         name: \"operationaladmin\"\n       }).save(err => {\n         if (err) {\n-          console.log(\"error\", err);\n+          console.log(\"error\", err)\n         }\n \n-        console.log(\"added 'operationaladmin' to roles collection\");\n-      });\n+        console.log(\"added 'operationaladmin' to roles collection\")\n+      })\n     }\n-  });\n+  })\n }\n"
                },
                {
                    "date": 1686925326065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n // routes\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n \n+\n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n   console.log(`Server is running on port ${PORT}.`)\n"
                },
                {
                    "date": 1686925332938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,10 @@\n \n // routes\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n+require(\"./c\")\n \n-\n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n   console.log(`Server is running on port ${PORT}.`)\n"
                },
                {
                    "date": 1686925342114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n // routes\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n-require(\"./c\")\n+require(\"./\")\n \n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1686925347944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n // routes\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n-require(\"./\")\n+require(\"./routes/tutorial.routes\")\n \n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1686925354923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n // routes\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n-require(\"./routes/tutorial.routes\")\n+require(\"./routes/tutorial.routes\")(ap)\n \n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1686986429717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,11 @@\n \n // routes\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n-require(\"./routes/tutorial.routes\")(ap)\n+require(\"./routes/tutorial.routes\")(app)\n \n+\n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n   console.log(`Server is running on port ${PORT}.`)\n"
                },
                {
                    "date": 1686986434970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,10 @@\n // routes\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n require(\"./routes/tutorial.routes\")(app)\n+require\n \n-\n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n   console.log(`Server is running on port ${PORT}.`)\n"
                },
                {
                    "date": 1686986441823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n // routes\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n require(\"./routes/tutorial.routes\")(app)\n-require\n+require(\"./routes/\")\n \n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1686986447074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n // routes\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n require(\"./routes/tutorial.routes\")(app)\n-require(\"./routes/\")\n+require(\"./routes/todo.routes\")(app)\n \n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1686987270583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n   })\n \n // simple route\n app.get(\"/\", (req, res) => {\n-  res.json({ message: \"Welcome to bezkoder application.\" })\n+  res.json({ message: \"Welcome to my application.\" })\n })\n \n // routes\n require(\"./routes/auth.routes\")(app)\n"
                },
                {
                    "date": 1687010646907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n require(\"./routes/auth.routes\")(app)\n require(\"./routes/user.routes\")(app)\n require(\"./routes/tutorial.routes\")(app)\n require(\"./routes/todo.routes\")(app)\n+require(\"./routes/todo.routes\")(app)\n \n // set port, listen for requests\n const PORT = process.env.PORT || 4000\n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1687010652748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,128 @@\n+const express = require(\"express\")\n+const cors = require(\"cors\")\n+const cookieSession = require(\"cookie-session\")\n+const db = require(\"./models\")\n+const dbConfig = require(\"./config/db.config\")\n+\n+const app = express()\n+\n+var corsOptions = {\n+  origin: \"http://localhost:4001\"\n+}\n+\n+app.use(cors(corsOptions))\n+\n+// parse requests of content-type - application/json\n+app.use(express.json())\n+\n+// parse requests of content-type - application/x-www-form-urlencoded\n+app.use(express.urlencoded({ extended: true }))\n+\n+app.use(\n+  cookieSession({\n+    name: \"sridhar-session\",\n+    secret: \"COOKIE_SECRET\", // should use as secret environment variable\n+    httpOnly: true\n+  })\n+)\n+\n+\n+const Role = db.role\n+\n+db.mongoose\n+  .connect(`mongodb://${dbConfig.HOST}:${dbConfig.PORT}/${dbConfig.DB}`, {\n+    useNewUrlParser: true,\n+    useUnifiedTopology: true\n+  })\n+  .then(() => {\n+    console.log(\"Successfully connect to MongoDB.\")\n+    initial()\n+  })\n+  .catch(err => {\n+    console.error(\"Connection error\", err)\n+    process.exit()\n+  })\n+\n+// simple route\n+app.get(\"/\", (req, res) => {\n+  res.json({ message: \"Welcome to my application.\" })\n+})\n+\n+// routes\n+require(\"./routes/auth.routes\")(app)\n+require(\"./routes/user.routes\")(app)\n+require(\"./routes/tutorial.routes\")(app)\n+require(\"./routes/todo.routes\")(app)\n+require(\"./routes/tag.routes\")(app)\n+\n+// set port, listen for requests\n+const PORT = process.env.PORT || 4000\n+app.listen(PORT, () => {\n+  console.log(`Server is running on port ${PORT}.`)\n+})\n+\n+function initial() {\n+  Role.estimatedDocumentCount((err, count) => {\n+    if (!err && count === 0) {\n+      new Role({\n+        name: \"user\"\n+      }).save(err => {\n+        if (err) {\n+          console.log(\"error\", err)\n+        }\n+\n+        console.log(\"added 'user' to roles collection\")\n+      })\n+\n+      new Role({\n+        name: \"branchadmin\"\n+      }).save(err => {\n+        if (err) {\n+          console.log(\"error\", err)\n+        }\n+\n+        console.log(\"added 'branchadmin' to roles collection\")\n+      })\n+\n+      new Role({\n+        name: \"admin\"\n+      }).save(err => {\n+        if (err) {\n+          console.log(\"error\", err)\n+        }\n+\n+        console.log(\"added 'admin' to roles collection\")\n+      })\n+\n+      new Role({\n+        name: \"superadmin\"\n+      }).save(err => {\n+        if (err) {\n+          console.log(\"error\", err)\n+        }\n+\n+        console.log(\"added 'superadmin' to roles collection\")\n+      })\n+\n+      new Role({\n+        name: \"staffaccount\"\n+      }).save(err => {\n+        if (err) {\n+          console.log(\"error\", err)\n+        }\n+\n+        console.log(\"added 'staffaccount' to roles collection\")\n+      })\n+\n+      new Role({\n+        name: \"operationaladmin\"\n+      }).save(err => {\n+        if (err) {\n+          console.log(\"error\", err)\n+        }\n+\n+        console.log(\"added 'operationaladmin' to roles collection\")\n+      })\n+    }\n+  })\n+}\n"
                },
                {
                    "date": 1687172976264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,132 +125,4 @@\n       })\n     }\n   })\n }\n-const express = require(\"express\")\n-const cors = require(\"cors\")\n-const cookieSession = require(\"cookie-session\")\n-const db = require(\"./models\")\n-const dbConfig = require(\"./config/db.config\")\n-\n-const app = express()\n-\n-var corsOptions = {\n-  origin: \"http://localhost:4001\"\n-}\n-\n-app.use(cors(corsOptions))\n-\n-// parse requests of content-type - application/json\n-app.use(express.json())\n-\n-// parse requests of content-type - application/x-www-form-urlencoded\n-app.use(express.urlencoded({ extended: true }))\n-\n-app.use(\n-  cookieSession({\n-    name: \"sridhar-session\",\n-    secret: \"COOKIE_SECRET\", // should use as secret environment variable\n-    httpOnly: true\n-  })\n-)\n-\n-\n-const Role = db.role\n-\n-db.mongoose\n-  .connect(`mongodb://${dbConfig.HOST}:${dbConfig.PORT}/${dbConfig.DB}`, {\n-    useNewUrlParser: true,\n-    useUnifiedTopology: true\n-  })\n-  .then(() => {\n-    console.log(\"Successfully connect to MongoDB.\")\n-    initial()\n-  })\n-  .catch(err => {\n-    console.error(\"Connection error\", err)\n-    process.exit()\n-  })\n-\n-// simple route\n-app.get(\"/\", (req, res) => {\n-  res.json({ message: \"Welcome to my application.\" })\n-})\n-\n-// routes\n-require(\"./routes/auth.routes\")(app)\n-require(\"./routes/user.routes\")(app)\n-require(\"./routes/tutorial.routes\")(app)\n-require(\"./routes/todo.routes\")(app)\n-require(\"./routes/todo.routes\")(app)\n-\n-// set port, listen for requests\n-const PORT = process.env.PORT || 4000\n-app.listen(PORT, () => {\n-  console.log(`Server is running on port ${PORT}.`)\n-})\n-\n-function initial() {\n-  Role.estimatedDocumentCount((err, count) => {\n-    if (!err && count === 0) {\n-      new Role({\n-        name: \"user\"\n-      }).save(err => {\n-        if (err) {\n-          console.log(\"error\", err)\n-        }\n-\n-        console.log(\"added 'user' to roles collection\")\n-      })\n-\n-      new Role({\n-        name: \"branchadmin\"\n-      }).save(err => {\n-        if (err) {\n-          console.log(\"error\", err)\n-        }\n-\n-        console.log(\"added 'branchadmin' to roles collection\")\n-      })\n-\n-      new Role({\n-        name: \"admin\"\n-      }).save(err => {\n-        if (err) {\n-          console.log(\"error\", err)\n-        }\n-\n-        console.log(\"added 'admin' to roles collection\")\n-      })\n-\n-      new Role({\n-        name: \"superadmin\"\n-      }).save(err => {\n-        if (err) {\n-          console.log(\"error\", err)\n-        }\n-\n-        console.log(\"added 'superadmin' to roles collection\")\n-      })\n-\n-      new Role({\n-        name: \"staffaccount\"\n-      }).save(err => {\n-        if (err) {\n-          console.log(\"error\", err)\n-        }\n-\n-        console.log(\"added 'staffaccount' to roles collection\")\n-      })\n-\n-      new Role({\n-        name: \"operationaladmin\"\n-      }).save(err => {\n-        if (err) {\n-          console.log(\"error\", err)\n-        }\n-\n-        console.log(\"added 'operationaladmin' to roles collection\")\n-      })\n-    }\n-  })\n-}\n"
                },
                {
                    "date": 1687323672386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n const app = express()\n \n var corsOptions = {\n-  origin: \"http://localhost:4001\"\n+  origin: \"http://localhost:4000\"\n }\n \n app.use(cors(corsOptions))\n \n"
                },
                {
                    "date": 1687323867024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,10 @@\n \n const app = express()\n \n var corsOptions = {\n-  origin: \"http://localhost:4000\"\n+  origin: \"http://localhost:4000\",\n+  \n }\n \n app.use(cors(corsOptions))\n \n"
                },
                {
                    "date": 1687323873759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n const app = express()\n \n var corsOptions = {\n   origin: \"http://localhost:4000\",\n-  \n+  acc\n }\n \n app.use(cors(corsOptions))\n \n"
                },
                {
                    "date": 1687323880043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n const app = express()\n \n var corsOptions = {\n   origin: \"http://localhost:4000\",\n-  acc\n+  access-control-\n }\n \n app.use(cors(corsOptions))\n \n"
                },
                {
                    "date": 1687323887569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n const app = express()\n \n var corsOptions = {\n   origin: \"http://localhost:4000\",\n-  access-control-\n+  access-control-allow-cren\n }\n \n app.use(cors(corsOptions))\n \n"
                },
                {
                    "date": 1687323895353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n const app = express()\n \n var corsOptions = {\n   origin: \"http://localhost:4000\",\n-  access-control-allow-cren\n+  access-control-allow-Credentials\n }\n \n app.use(cors(corsOptions))\n \n"
                },
                {
                    "date": 1687323904672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,10 @@\n const app = express()\n \n var corsOptions = {\n   origin: \"http://localhost:4000\",\n-  access-control-allow-Credentials\n+  access-control-allow-credentials: true,\n+  \n }\n \n app.use(cors(corsOptions))\n \n"
                },
                {
                    "date": 1687323912050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \n var corsOptions = {\n   origin: \"http://localhost:4000\",\n   access-control-allow-credentials: true,\n-  \n+  optionS\n }\n \n app.use(cors(corsOptions))\n \n"
                },
                {
                    "date": 1687323921182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \n var corsOptions = {\n   origin: \"http://localhost:4000\",\n   access-control-allow-credentials: true,\n-  optionS\n+  optionSuccessStatus: 200\n }\n \n app.use(cors(corsOptions))\n \n"
                },
                {
                    "date": 1687323931809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n const app = express()\n \n var corsOptions = {\n   origin: \"http://localhost:4000\",\n-  access-control-allow-credentials: true,\n+  credentials: true,\n   optionSuccessStatus: 200\n }\n \n app.use(cors(corsOptions))\n"
                },
                {
                    "date": 1687324785814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,13 +6,12 @@\n \n const app = express()\n \n var corsOptions = {\n-  origin: \"http://localhost:4000\",\n+  origin: \"http://localhost:3000\",\n   credentials: true,\n   optionSuccessStatus: 200\n }\n-\n app.use(cors(corsOptions))\n \n // parse requests of content-type - application/json\n app.use(express.json())\n"
                },
                {
                    "date": 1687422252442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,10 @@\n \n var corsOptions = {\n   origin: \"http://localhost:3000\",\n   credentials: true,\n-  optionSuccessStatus: 200\n+  optionSuccessStatus: 200,\n+  \n }\n app.use(cors(corsOptions))\n \n // parse requests of content-type - application/json\n"
                },
                {
                    "date": 1687422266710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n var corsOptions = {\n   origin: \"http://localhost:3000\",\n   credentials: true,\n   optionSuccessStatus: 200,\n-  \n+  Access-Control-Allow-Origin\n }\n app.use(cors(corsOptions))\n \n // parse requests of content-type - application/json\n"
                },
                {
                    "date": 1687422336911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n var corsOptions = {\n   origin: \"http://localhost:3000\",\n   credentials: true,\n   optionSuccessStatus: 200,\n-  Access-Control-Allow-Origin\n+  Access-Control-Allow-Origin: *''\n }\n app.use(cors(corsOptions))\n \n // parse requests of content-type - application/json\n"
                },
                {
                    "date": 1687422349936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n var corsOptions = {\n   origin: \"http://localhost:3000\",\n   credentials: true,\n   optionSuccessStatus: 200,\n-  Access-Control-Allow-Origin: *''\n+  'Access-Control-Allow-Origin: '*'\n }\n app.use(cors(corsOptions))\n \n // parse requests of content-type - application/json\n"
                },
                {
                    "date": 1687422484821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,9 @@\n \n var corsOptions = {\n   origin: \"http://localhost:3000\",\n   credentials: true,\n-  optionSuccessStatus: 200,\n-  'Access-Control-Allow-Origin: '*'\n+  optionSuccessStatus: 200\n }\n app.use(cors(corsOptions))\n \n // parse requests of content-type - application/json\n"
                },
                {
                    "date": 1687861739704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   .connect(`mongodb://${dbConfig.HOST}:${dbConfig.PORT}/${dbConfig.DB}`, {\n     useNewUrlParser: true,\n     useUnifiedTopology: true\n   })\n-  .then(() => {\n+  .then(() => {s\n     console.log(\"Successfully connect to MongoDB.\")\n     initial()\n   })\n   .catch(err => {\n"
                },
                {
                    "date": 1689245075485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n const app = express()\n \n var corsOptions = {\n-  origin: \"http://localhost:3000\",\n+  origin: \"http://localhost:3001\",\n   credentials: true,\n   optionSuccessStatus: 200\n }\n app.use(cors(corsOptions))\n@@ -34,9 +34,9 @@\n   .connect(`mongodb://${dbConfig.HOST}:${dbConfig.PORT}/${dbConfig.DB}`, {\n     useNewUrlParser: true,\n     useUnifiedTopology: true\n   })\n-  .then(() => {s\n+  .then(() => {\n     console.log(\"Successfully connect to MongoDB.\")\n     initial()\n   })\n   .catch(err => {\n"
                },
                {
                    "date": 1689245943599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,11 @@\n \n const app = express()\n \n var corsOptions = {\n-  origin: \"http://localhost:3001\",\n+  origin: \"http://localhost:3000\",\n   credentials: true,\n-  optionSuccessStatus: 200,\n+  optionSuccessStatus: 200\n }\n app.use(cors(corsOptions))\n \n // parse requests of content-type - application/json\n@@ -22,24 +22,25 @@\n app.use(\n   cookieSession({\n     name: \"sridhar-session\",\n     secret: \"COOKIE_SECRET\", // should use as secret environment variable\n-    httpOnly: true,\n+    httpOnly: true\n   })\n )\n \n+\n const Role = db.role\n \n db.mongoose\n   .connect(`mongodb://${dbConfig.HOST}:${dbConfig.PORT}/${dbConfig.DB}`, {\n     useNewUrlParser: true,\n-    useUnifiedTopology: true,\n+    useUnifiedTopology: true\n   })\n   .then(() => {\n     console.log(\"Successfully connect to MongoDB.\")\n     initial()\n   })\n-  .catch((err) => {\n+  .catch(err => {\n     console.error(\"Connection error\", err)\n     process.exit()\n   })\n \n@@ -64,60 +65,60 @@\n function initial() {\n   Role.estimatedDocumentCount((err, count) => {\n     if (!err && count === 0) {\n       new Role({\n-        name: \"user\",\n-      }).save((err) => {\n+        name: \"user\"\n+      }).save(err => {\n         if (err) {\n           console.log(\"error\", err)\n         }\n \n         console.log(\"added 'user' to roles collection\")\n       })\n \n       new Role({\n-        name: \"branchadmin\",\n-      }).save((err) => {\n+        name: \"branchadmin\"\n+      }).save(err => {\n         if (err) {\n           console.log(\"error\", err)\n         }\n \n         console.log(\"added 'branchadmin' to roles collection\")\n       })\n \n       new Role({\n-        name: \"admin\",\n-      }).save((err) => {\n+        name: \"admin\"\n+      }).save(err => {\n         if (err) {\n           console.log(\"error\", err)\n         }\n \n         console.log(\"added 'admin' to roles collection\")\n       })\n \n       new Role({\n-        name: \"superadmin\",\n-      }).save((err) => {\n+        name: \"superadmin\"\n+      }).save(err => {\n         if (err) {\n           console.log(\"error\", err)\n         }\n \n         console.log(\"added 'superadmin' to roles collection\")\n       })\n \n       new Role({\n-        name: \"staffaccount\",\n-      }).save((err) => {\n+        name: \"staffaccount\"\n+      }).save(err => {\n         if (err) {\n           console.log(\"error\", err)\n         }\n \n         console.log(\"added 'staffaccount' to roles collection\")\n       })\n \n       new Role({\n-        name: \"operationaladmin\",\n-      }).save((err) => {\n+        name: \"operationaladmin\"\n+      }).save(err => {\n         if (err) {\n           console.log(\"error\", err)\n         }\n \n"
                },
                {
                    "date": 1691210793938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n       io.emit(\"getUsers\", Users)\n     }\n   })\n \n-  socket.on(\"sendMessage\", as)\n+  socket.on(\"sendMessage\", async function)\n \n   socket.on(\"disconnect\", () => {\n     console.log(\"user disconnected\")\n   })\n"
                }
            ],
            "date": 1686911148528,
            "name": "Commit-0",
            "content": "const express = require(\"express\")\nconst cors = require(\"cors\")\nconst cookieSession = require(\"cookie-session\")\nconst db = require(\"./models\")\nconst swaggerJsDoc = require(\"swagger-jsdoc\")\nconst swaggerUiExpress = require(\"swagger-ui-express\")\n\nconst dbConfig = require(\"./config/db.config\")\n\nconst app = express()\n\nvar corsOptions = {\n  origin: \"http://localhost:4001\"\n}\n\napp.use(cors(corsOptions))\n\n// parse requests of content-type - application/json\napp.use(express.json())\n\n// parse requests of content-type - application/x-www-form-urlencoded\napp.use(express.urlencoded({ extended: true }))\n\napp.use(\n  cookieSession({\n    name: \"sridhar-session\",\n    secret: \"COOKIE_SECRET\", // should use as secret environment variable\n    httpOnly: true\n  })\n)\n\nconst Role = db.role\n\ndb.mongoose\n  .connect(`mongodb://${dbConfig.HOST}:${dbConfig.PORT}/${dbConfig.DB}`, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  })\n  .then(() => {\n    console.log(\"Successfully connect to MongoDB.\")\n    initial()\n  })\n  .catch(err => {\n    console.error(\"Connection error\", err)\n    process.exit()\n  })\n\n// swagger\nconst options = {\n  definition: {\n    openapi: \"3.1.0\",\n    info: {\n      title: \"My Application express api with swagger\",\n      version: \"1.0.0\",\n      description: \"This is a simple CRUD API application made with Express and documented with Swagger\",\n      licence: {\n        name: \"MIT\"\n      },\n      contact: {\n        name: \"Sridhar G\",\n        email: \"goly.sridhar@gmail.com\"\n      }\n    },\n    servers: [\n      {\n        url: \"http://localhost:4000\"\n      }\n    ]\n  },\n  apis: [\"./server.js\"]\n}\n\nconst specs = swaggerJsDoc(options)\napp.use(\n  \"/api-docs\",\n  swaggerUiExpress.serve,\n  swaggerUiExpress.setup(\n    specs, \n    { explorer: true },\n    \"https://cdn.jsdelivr.net/npm/swagger-ui-themes@3.0.0/themes/3.x/theme-newspaper.css\"  \n  )\n)\n\n/**\n * @swagger\n * /:\n *  get:\n *      summary: This api is use to check the Get method is working or not,\n *      description: This api is use to check the Get method is working or not,\n *      responses:\n *        200:\n *          description: To test Get method\n */\n\n// simple route\napp.get(\"/\", (req, res) => {\n  res.json({ message: \"Welcome to my application.\" })\n})\n\n/**\n * @swagger\n * /api/auth/signin:\n *  post:\n *      summary: This api is used to login to the application with valid credentials,\n *      description: This api is used to login to the application with valid credentials,\n *      requestBody:\n *        required: true\n *        content:\n *          application/json:\n *            schemas:\n *              username:\n *                  type: string\n *              password:\n *                  type: string\n *      response:\n *        200:\n *          description: \"Successfully logged in!\"\n * \n */\n// routes\nrequire('./app/routes/auth.routes')(app);\nrequire('./app/routes/user.routes')(app);\n\n// set port, listen for requests\nconst PORT = process.env.PORT || 4000\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}.`)\n})\n\nfunction initial() {\n  Role.estimatedDocumentCount((err, count) => {\n    if (!err && count === 0) {\n      new Role({\n        name: \"user\"\n      }).save(err => {\n        if (err) {\n          console.log(\"error\", err)\n        }\n\n        console.log(\"added 'user' to roles collection\")\n      })\n\n      new Role({\n        name: \"branchadmin\"\n      }).save(err => {\n        if (err) {\n          console.log(\"error\", err)\n        }\n\n        console.log(\"added 'branchadmin' to roles collection\")\n      })\n\n      new Role({\n        name: \"admin\"\n      }).save(err => {\n        if (err) {\n          console.log(\"error\", err)\n        }\n\n        console.log(\"added 'admin' to roles collection\")\n      })\n\n      new Role({\n        name: \"superadmin\"\n      }).save(err => {\n        if (err) {\n          console.log(\"error\", err)\n        }\n\n        console.log(\"added 'superadmin' to roles collection\")\n      })\n\n      new Role({\n        name: \"staffaccount\"\n      }).save(err => {\n        if (err) {\n          console.log(\"error\", err)\n        }\n\n        console.log(\"added 'staffaccount' to roles collection\")\n      })\n\n      new Role({\n        name: \"operationaladmin\"\n      }).save(err => {\n        if (err) {\n          console.log(\"error\", err)\n        }\n\n        console.log(\"added 'operationaladmin' to roles collection\")\n      })\n    }\n  })\n}\n"
        }
    ]
}