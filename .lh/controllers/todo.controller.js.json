{
    "sourceFile": "controllers/todo.controller.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 152,
            "patches": [
                {
                    "date": 1686983649811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686983659146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-todo.controller.js\n\\ No newline at end of file\n+const \n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983664858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-const \n\\ No newline at end of file\n+const db = require\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983670285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-const db = require\n\\ No newline at end of file\n+const db = require(\"../models/\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983675832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-const db = require(\"../models/\")\n\\ No newline at end of file\n+const db = require(\"../models/index.js\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983720170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-const db = require(\"../models/index.js\")\n\\ No newline at end of file\n+const db = require(\"../models/index.js\")\n"
                },
                {
                    "date": 1686983736384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,3 @@\n const db = require(\"../models/index.js\")\n+\n+const \n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983743341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n const db = require(\"../models/index.js\")\n \n-const \n\\ No newline at end of file\n+const Todo = db.todo\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983754439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,5 @@\n const db = require(\"../models/index.js\")\n \n-const Todo = db.todo\n\\ No newline at end of file\n+const Todo = db.todo\n+\n+/*\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983760021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n const db = require(\"../models/index.js\")\n \n const Todo = db.todo\n \n-/*\n\\ No newline at end of file\n+/**\n+ * @ \n+ */\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983768826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,6 @@\n \n const Todo = db.todo\n \n /**\n- * @ \n+ * @route\n  */\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983796217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,6 @@\n \n const Todo = db.todo\n \n /**\n- * @route\n+ * @crea\n  */\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983804922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,6 @@\n \n const Todo = db.todo\n \n /**\n- * @crea\n+ * @create a new todo \n  */\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983812533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,7 @@\n \n const Todo = db.todo\n \n /**\n- * @create a new todo \n+ * @ create a new todo model\n+ * \n  */\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983828379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n const db = require(\"../models/index.js\")\n \n const Todo = db.todo\n \n-/**\n- * @ create a new todo model\n+@ create a new todo model\n  * \n  */\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983833878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,5 @@\n const db = require(\"../models/index.js\")\n \n const Todo = db.todo\n \n-@ create a new todo model\n- * \n- */\n\\ No newline at end of file\n+//@create a new todo model\n"
                },
                {
                    "date": 1686983839934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n const db = require(\"../models/index.js\")\n \n const Todo = db.todo\n \n-//@create a new todo model\n+// @create a new todo model\n+// #\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983848475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,5 +2,5 @@\n \n const Todo = db.todo\n \n // @create a new todo model\n-// #\n\\ No newline at end of file\n+// @desc Get all \n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983858406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,5 +2,5 @@\n \n const Todo = db.todo\n \n // @create a new todo model\n-// @desc Get all \n\\ No newline at end of file\n+// @desc Get all todos\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983864705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n const db = require(\"../models/index.js\")\n \n const Todo = db.todo\n \n-// @create a new todo model\n+// @\n // @desc Get all todos\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983871490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n const db = require(\"../models/index.js\")\n \n const Todo = db.todo\n \n-// @\n+// @route Get \n // @desc Get all todos\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983879545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n const db = require(\"../models/index.js\")\n \n const Todo = db.todo\n \n-// @route Get \n+// @route GET api/todo \n // @desc Get all todos\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983887841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n const db = require(\"../models/index.js\")\n \n const Todo = db.todo\n \n-// @route GET api/todo \n-// @desc Get all todos\n\\ No newline at end of file\n+// @route GET api/todos \n+// @desc Get all todos\n"
                },
                {
                    "date": 1686983893661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,4 +3,5 @@\n const Todo = db.todo\n \n // @route GET api/todos \n // @desc Get all todos\n+// @access\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983899577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,5 @@\n const Todo = db.todo\n \n // @route GET api/todos \n // @desc Get all todos\n-// @access\n\\ No newline at end of file\n+// @access Private\n"
                },
                {
                    "date": 1686983931384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,4 +4,5 @@\n \n // @route GET api/todos \n // @desc Get all todos\n // @access Private\n+exports.findAll\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686983937766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,5 +4,5 @@\n \n // @route GET api/todos \n // @desc Get all todos\n // @access Private\n-exports.findAll\n\\ No newline at end of file\n+exports.findAll = (req, res)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986097765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,5 +4,7 @@\n \n // @route GET api/todos \n // @desc Get all todos\n // @access Private\n-exports.findAll = (req, res)\n\\ No newline at end of file\n+exports.findAll = (req, res) => {\n+  cos\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986104360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,6 +5,6 @@\n // @route GET api/todos \n // @desc Get all todos\n // @access Private\n exports.findAll = (req, res) => {\n-  cos\n+  const text = \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986111161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,6 +5,6 @@\n // @route GET api/todos \n // @desc Get all todos\n // @access Private\n exports.findAll = (req, res) => {\n-  const text = \n+  const text = req.query\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986128949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,6 +5,7 @@\n // @route GET api/todos \n // @desc Get all todos\n // @access Private\n exports.findAll = (req, res) => {\n-  const text = req.query\n+  const text = req.query.text\n+  var condition = title ? { title: { $regex: new RegExp(title), $options: \"i\" } } : {}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986134482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,6 +6,6 @@\n // @desc Get all todos\n // @access Private\n exports.findAll = (req, res) => {\n   const text = req.query.text\n-  var condition = title ? { title: { $regex: new RegExp(title), $options: \"i\" } } : {}\n+  var condition = text ? { text: { $regex: new RegExp(title), $options: \"i\" } } : {}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986160178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,6 +6,7 @@\n // @desc Get all todos\n // @access Private\n exports.findAll = (req, res) => {\n   const text = req.query.text\n-  var condition = text ? { text: { $regex: new RegExp(title), $options: \"i\" } } : {}\n+  var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n+  \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986167427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,6 +7,7 @@\n // @access Private\n exports.findAll = (req, res) => {\n   const text = req.query.text\n   var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n-  \n+\n+  Todo.\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986174758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,6 +8,6 @@\n exports.findAll = (req, res) => {\n   const text = req.query.text\n   var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n \n-  Todo.\n+  Todo.find\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986181991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,6 +8,8 @@\n exports.findAll = (req, res) => {\n   const text = req.query.text\n   var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n \n-  Todo.find\n+  Todo.find(condition) {\n+    \n+  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986193006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,6 @@\n exports.findAll = (req, res) => {\n   const text = req.query.text\n   var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n \n-  Todo.find(condition) {\n-    \n-  }\n+  Todo.find(condition).then\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986200520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,6 +8,8 @@\n exports.findAll = (req, res) => {\n   const text = req.query.text\n   var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n \n-  Todo.find(condition).then\n+  Todo.find(condition).then(data => {\n+    \n+  })\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986209653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,7 +9,7 @@\n   const text = req.query.text\n   var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n \n   Todo.find(condition).then(data => {\n-    \n+    res.send(data)\n   })\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986215909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,6 +10,8 @@\n   var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n \n   Todo.find(condition).then(data => {\n     res.send(data)\n+  }).catch(err => {\n+    \n   })\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986226340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,7 +11,10 @@\n \n   Todo.find(condition).then(data => {\n     res.send(data)\n   }).catch(err => {\n-    \n+    res.status(500).send({\n+      message:\n+        err.message || \"Some error occurred while retrieving tutorials.\"\n+    })\n   })\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986231914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,8 @@\n     res.send(data)\n   }).catch(err => {\n     res.status(500).send({\n       message:\n-        err.message || \"Some error occurred while retrieving tutorials.\"\n+        err.message || \"Some error occurred while retrieving todos.\"\n     })\n   })\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686986644636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,5 +16,6 @@\n       message:\n         err.message || \"Some error occurred while retrieving todos.\"\n     })\n   })\n-}\n\\ No newline at end of file\n+}\n+\n"
                },
                {
                    "date": 1686986652735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,4 +18,8 @@\n     })\n   })\n }\n \n+// @route GET api/todos \n+// @desc Get all todos\n+// @access Private\n+\n"
                },
                {
                    "date": 1686986657891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,8 @@\n     })\n   })\n }\n \n-// @route GET api/todos \n+// @route POST api/todos \n // @desc Get all todos\n // @access Private\n \n"
                },
                {
                    "date": 1686986668110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,7 @@\n   })\n }\n \n // @route POST api/todos \n-// @desc Get all todos\n+// @desc create a todos\n // @access Private\n \n"
                },
                {
                    "date": 1686986675191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,7 @@\n   })\n }\n \n // @route POST api/todos \n-// @desc create a todos\n+// @desc create a todo\n // @access Private\n-\n+export\n"
                },
                {
                    "date": 1686986680958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,5 +21,5 @@\n \n // @route POST api/todos \n // @desc create a todo\n // @access Private\n-export\n+exports.create\n"
                },
                {
                    "date": 1686986692258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,5 +21,7 @@\n \n // @route POST api/todos \n // @desc create a todo\n // @access Private\n-exports.create\n+exports.create = (req, res) => {\n+  \n+}\n"
                },
                {
                    "date": 1686986774685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,6 +22,7 @@\n // @route POST api/todos \n // @desc create a todo\n // @access Private\n exports.create = (req, res) => {\n-  \n+\n+  // Validate a \n }\n"
                },
                {
                    "date": 1686986784973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,6 +23,7 @@\n // @desc create a todo\n // @access Private\n exports.create = (req, res) => {\n \n-  // Validate a \n+  // Validate \n+\n }\n"
                },
                {
                    "date": 1686986811007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+const db = require(\"../models/index.js\")\n+\n+const Todo = db.todo\n+\n+// @route GET api/todos \n+// @desc Get all todos\n+// @access Private\n+exports.findAll = (req, res) => {\n+  const text = req.query.text\n+  var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n+\n+  Todo.find(condition).then(data => {\n+    res.send(data)\n+  }).catch(err => {\n+    res.status(500).send({\n+      message:\n+        err.message || \"Some error occurred while retrieving todos.\"\n+    })\n+  })\n+}\n+\n+// @route POST api/todos \n+// @desc create a todo\n+// @access Private\n+exports.create = (req, res) => {\n+\n+  // Validate request\n+  if(req.body.)\n+\n+}\n"
                },
                {
                    "date": 1686986825140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,36 +24,9 @@\n // @access Private\n exports.create = (req, res) => {\n \n   // Validate request\n-  if(req.body.)\n+  if(req.body.text) {\n+    res.status(400).send({ message: \"Content can not be empty!\" })\n+  }\n \n }\n-const db = require(\"../models/index.js\")\n-\n-const Todo = db.todo\n-\n-// @route GET api/todos \n-// @desc Get all todos\n-// @access Private\n-exports.findAll = (req, res) => {\n-  const text = req.query.text\n-  var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n-\n-  Todo.find(condition).then(data => {\n-    res.send(data)\n-  }).catch(err => {\n-    res.status(500).send({\n-      message:\n-        err.message || \"Some error occurred while retrieving todos.\"\n-    })\n-  })\n-}\n-\n-// @route POST api/todos \n-// @desc create a todo\n-// @access Private\n-exports.create = (req, res) => {\n-\n-  // Validate \n-\n-}\n"
                },
                {
                    "date": 1686986830802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,8 @@\n exports.create = (req, res) => {\n \n   // Validate request\n   if(req.body.text) {\n-    res.status(400).send({ message: \"Content can not be empty!\" })\n+    return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n \n }\n"
                },
                {
                    "date": 1686986852037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,5 +28,24 @@\n   if(req.body.text) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n \n+  // Create a Tutorial\n+  const tutorial = new Tutorial({\n+    title: req.body.title,\n+    description: req.body.description,\n+    published: req.body.published ? req.body.published : false\n+  })\n+\n+  // Save Tutorial in the database\n+  tutorial\n+    .save(tutorial)\n+    .then(data => {\n+      res.send(data)\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message:\n+          err.message || \"Some error occurred while creating the Tutorial.\"\n+      })\n+    })\n }\n"
                },
                {
                    "date": 1686986865863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,10 @@\n   if(req.body.text) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n \n-  // Create a Tutorial\n-  const tutorial = new Tutorial({\n+  // Create a todo\n+  const tutorial = new Todo({\n     title: req.body.title,\n     description: req.body.description,\n     published: req.body.published ? req.body.published : false\n   })\n"
                },
                {
                    "date": 1686986872296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n   }\n \n   // Create a todo\n   const tutorial = new Todo({\n-    title: req.body.title,\n+    text: req.body.text,\n     description: req.body.description,\n     published: req.body.published ? req.body.published : false\n   })\n \n"
                },
                {
                    "date": 1686986905409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n   }\n \n   // Create a todo\n   const tutorial = new Todo({\n-    text: req.body.text,\n+    name: req.body.text,\n     description: req.body.description,\n     published: req.body.published ? req.body.published : false\n   })\n \n"
                },
                {
                    "date": 1686986912949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,10 @@\n   }\n \n   // Create a todo\n   const tutorial = new Todo({\n-    name: req.body.text,\n+    name: req.body.name,\n+    text: req\n     description: req.body.description,\n     published: req.body.published ? req.body.published : false\n   })\n \n"
                },
                {
                    "date": 1686986918474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n \n   // Create a todo\n   const tutorial = new Todo({\n     name: req.body.name,\n-    text: req\n+    text: req.body.text,\n     description: req.body.description,\n     published: req.body.published ? req.body.published : false\n   })\n \n"
                },
                {
                    "date": 1686986933247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n   // Create a todo\n   const tutorial = new Todo({\n     name: req.body.name,\n     text: req.body.text,\n-    description: req.body.description,\n+    completed: req.body.description,\n     published: req.body.published ? req.body.published : false\n   })\n \n   // Save Tutorial in the database\n"
                },
                {
                    "date": 1686986939675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,10 @@\n   // Create a todo\n   const tutorial = new Todo({\n     name: req.body.name,\n     text: req.body.text,\n-    completed: req.body.description,\n-    published: req.body.published ? req.body.published : false\n+    description: req.body.description,\n+    completed: req.body.completed ? req.body.completed : false\n   })\n \n   // Save Tutorial in the database\n   tutorial\n"
                },
                {
                    "date": 1686986950082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n   // Create a todo\n   const tutorial = new Todo({\n     name: req.body.name,\n     text: req.body.text,\n-    description: req.body.description,\n+    tags: req.body.description,\n     completed: req.body.completed ? req.body.completed : false\n   })\n \n   // Save Tutorial in the database\n"
                },
                {
                    "date": 1686986956925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n   // Create a todo\n   const tutorial = new Todo({\n     name: req.body.name,\n     text: req.body.text,\n-    tags: req.body.description,\n+    tags: req.body.tags,\n     completed: req.body.completed ? req.body.completed : false\n   })\n \n   // Save Tutorial in the database\n"
                },
                {
                    "date": 1686986980337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n \n   // Create a todo\n-  const tutorial = new Todo({\n+  const todo = new Todo({\n     name: req.body.name,\n     text: req.body.text,\n     tags: req.body.tags,\n     completed: req.body.completed ? req.body.completed : false\n"
                },
                {
                    "date": 1686986992122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,16 +37,16 @@\n     completed: req.body.completed ? req.body.completed : false\n   })\n \n   // Save Tutorial in the database\n-  tutorial\n+  todo\n     .save(tutorial)\n     .then(data => {\n       res.send(data)\n     })\n     .catch(err => {\n       res.status(500).send({\n         message:\n-          err.message || \"Some error occurred while creating the Tutorial.\"\n+          err.message || \"Some error occurred while creating the todo.\"\n       })\n     })\n }\n"
                },
                {
                    "date": 1686987017130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     tags: req.body.tags,\n     completed: req.body.completed ? req.body.completed : false\n   })\n \n-  // Save Tutorial in the database\n+  // Save todo in the database\n   todo\n     .save(tutorial)\n     .then(data => {\n       res.send(data)\n"
                },
                {
                    "date": 1686987046594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n   })\n \n   // Save todo in the database\n   todo\n-    .save(tutorial)\n+    .save(todo)\n     .then(data => {\n       res.send(data)\n     })\n     .catch(err => {\n"
                },
                {
                    "date": 1686987479187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,10 @@\n // @desc create a todo\n // @access Private\n exports.create = (req, res) => {\n \n+  \n+\n   // Validate request\n   if(req.body.text) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n"
                },
                {
                    "date": 1686987486116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n // @desc create a todo\n // @access Private\n exports.create = (req, res) => {\n \n-  \n+  console.log(req.)\n \n   // Validate request\n   if(req.body.text) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n"
                },
                {
                    "date": 1686987677489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n // @desc create a todo\n // @access Private\n exports.create = (req, res) => {\n \n-  console.log(req.)\n+  console.log(req.body.text)\n \n   // Validate request\n   if(req.body.text) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n"
                },
                {
                    "date": 1686987693193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n   console.log(req.body.text)\n \n   // Validate request\n-  if(req.body.text) {\n+  if(!req.body.text) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n \n   // Create a todo\n"
                },
                {
                    "date": 1686987825281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,11 +22,8 @@\n // @route POST api/todos \n // @desc create a todo\n // @access Private\n exports.create = (req, res) => {\n-\n-  console.log(req.body.text)\n-\n   // Validate request\n   if(!req.body.text) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n"
                },
                {
                    "date": 1686987928663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n // @route POST api/todos \n // @desc create a todo\n // @access Private\n exports.create = (req, res) => {\n+  \n   // Validate request\n   if(!req.body.text) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n"
                },
                {
                    "date": 1686987944394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n // @route POST api/todos \n // @desc create a todo\n // @access Private\n exports.create = (req, res) => {\n-  \n+\n   // Validate request\n   if(!req.body.text) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n@@ -49,4 +49,8 @@\n           err.message || \"Some error occurred while creating the todo.\"\n       })\n     })\n }\n+\n+// @route POST api/todos \n+// @desc create a todo\n+// @access Private\n"
                },
                {
                    "date": 1686987964892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,7 +50,7 @@\n       })\n     })\n }\n \n-// @route POST api/todos \n+// @route POST api/todos/:id \n // @desc create a todo\n // @access Private\n"
                },
                {
                    "date": 1686987976822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,6 +51,6 @@\n     })\n }\n \n // @route POST api/todos/:id \n-// @desc create a todo\n+// @desc fetch a todo details\n // @access Private\n"
                },
                {
                    "date": 1686987983144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,4 +53,5 @@\n \n // @route POST api/todos/:id \n // @desc fetch a todo details\n // @access Private\n+exports.\n"
                },
                {
                    "date": 1686987995730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,5 +53,7 @@\n \n // @route POST api/todos/:id \n // @desc fetch a todo details\n // @access Private\n-exports.\n+exports.findOne = (req, res) => {\n+  \n+}\n"
                },
                {
                    "date": 1686988019813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,6 +54,6 @@\n // @route POST api/todos/:id \n // @desc fetch a todo details\n // @access Private\n exports.findOne = (req, res) => {\n-  \n+  const todoId = req.body.id\n }\n"
                },
                {
                    "date": 1686988033380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,5 +55,17 @@\n // @desc fetch a todo details\n // @access Private\n exports.findOne = (req, res) => {\n   const todoId = req.body.id\n+\n+  Tutorial.findById(id)\n+    .then(data => {\n+      if (!data)\n+        res.status(404).send({ message: \"Not found Tutorial with id \" + id })\n+      else res.send(data)\n+    })\n+    .catch(err => {\n+      res\n+        .status(500)\n+        .send({ message: \"Error retrieving Tutorial with id=\" + id })\n+    })\n }\n"
                },
                {
                    "date": 1686988047557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n // @access Private\n exports.findOne = (req, res) => {\n   const todoId = req.body.id\n \n-  Tutorial.findById(id)\n+  Todo.findById(id)\n     .then(data => {\n       if (!data)\n         res.status(404).send({ message: \"Not found Tutorial with id \" + id })\n       else res.send(data)\n"
                },
                {
                    "date": 1686988054324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n // @access Private\n exports.findOne = (req, res) => {\n   const todoId = req.body.id\n \n-  Todo.findById(id)\n+  Todo.findById(todoId)\n     .then(data => {\n       if (!data)\n         res.status(404).send({ message: \"Not found Tutorial with id \" + id })\n       else res.send(data)\n"
                },
                {
                    "date": 1686988060627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \n   Todo.findById(todoId)\n     .then(data => {\n       if (!data)\n-        res.status(404).send({ message: \"Not found Tutorial with id \" + id })\n+        res.status(404).send({ message: \"Not found Todo with id \" + id })\n       else res.send(data)\n     })\n     .catch(err => {\n       res\n"
                },
                {
                    "date": 1686988074601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,7 +65,7 @@\n     })\n     .catch(err => {\n       res\n         .status(500)\n-        .send({ message: \"Error retrieving Tutorial with id=\" + id })\n+        .send({ message: \"Error retrieving Todo details with id=\" + id })\n     })\n }\n"
                },
                {
                    "date": 1686988164602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \n   Todo.findById(todoId)\n     .then(data => {\n       if (!data)\n-        res.status(404).send({ message: \"Not found Todo with id \" + id })\n+        res.status(404).send({ message: \"Not found Todo with id \" + todoId })\n       else res.send(data)\n     })\n     .catch(err => {\n       res\n"
                },
                {
                    "date": 1686988248335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n // @route POST api/todos/:id \n // @desc fetch a todo details\n // @access Private\n exports.findOne = (req, res) => {\n-  const todoId = req.body.id\n+  const id = req.body.id\n \n   Todo.findById(todoId)\n     .then(data => {\n       if (!data)\n@@ -65,7 +65,7 @@\n     })\n     .catch(err => {\n       res\n         .status(500)\n-        .send({ message: \"Error retrieving Todo details with id=\" + id })\n+        .send({ message: \"Error retrieving Todo details with id=\" + todoId })\n     })\n }\n"
                },
                {
                    "date": 1686988254006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,16 +56,16 @@\n // @access Private\n exports.findOne = (req, res) => {\n   const id = req.body.id\n \n-  Todo.findById(todoId)\n+  Todo.findById(id)\n     .then(data => {\n       if (!data)\n-        res.status(404).send({ message: \"Not found Todo with id \" + todoId })\n+        res.status(404).send({ message: \"Not found Todo with id \" + id })\n       else res.send(data)\n     })\n     .catch(err => {\n       res\n         .status(500)\n-        .send({ message: \"Error retrieving Todo details with id=\" + todoId })\n+        .send({ message: \"Error retrieving Todo details with id=\" + id })\n     })\n }\n"
                },
                {
                    "date": 1686988267620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,9 @@\n // @desc fetch a todo details\n // @access Private\n exports.findOne = (req, res) => {\n   const id = req.body.id\n+  \n \n   Todo.findById(id)\n     .then(data => {\n       if (!data)\n"
                },
                {
                    "date": 1686988326894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,19 +54,18 @@\n // @route POST api/todos/:id \n // @desc fetch a todo details\n // @access Private\n exports.findOne = (req, res) => {\n-  const id = req.body.id\n-  \n+  const id = req.params.id\n \n-  Todo.findById(id)\n+  Tutorial.findById(id)\n     .then(data => {\n       if (!data)\n-        res.status(404).send({ message: \"Not found Todo with id \" + id })\n+        res.status(404).send({ message: \"Not found Tutorial with id \" + id })\n       else res.send(data)\n     })\n     .catch(err => {\n       res\n         .status(500)\n-        .send({ message: \"Error retrieving Todo details with id=\" + id })\n+        .send({ message: \"Error retrieving Tutorial with id=\" + id })\n     })\n }\n"
                },
                {
                    "date": 1686988342947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n // @access Private\n exports.findOne = (req, res) => {\n   const id = req.params.id\n \n-  Tutorial.findById(id)\n+  Todo.findById(id)\n     .then(data => {\n       if (!data)\n         res.status(404).send({ message: \"Not found Tutorial with id \" + id })\n       else res.send(data)\n"
                },
                {
                    "date": 1686988369624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,13 +59,13 @@\n \n   Todo.findById(id)\n     .then(data => {\n       if (!data)\n-        res.status(404).send({ message: \"Not found Tutorial with id \" + id })\n+        res.status(404).send({ message: \"Not found Todo with id \" + id })\n       else res.send(data)\n     })\n     .catch(err => {\n       res\n         .status(500)\n-        .send({ message: \"Error retrieving Tutorial with id=\" + id })\n+        .send({ message: \"Error retrieving Todo with id=\" + id })\n     })\n }\n"
                },
                {
                    "date": 1686988396439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,4 +68,29 @@\n         .status(500)\n         .send({ message: \"Error retrieving Todo with id=\" + id })\n     })\n }\n+\n+// Update a Tutorial by the id in the request\n+exports.update = (req, res) => {\n+  if (!req.body) {\n+    return res.status(400).send({\n+      message: \"Data to update can not be empty!\"\n+    })\n+  }\n+\n+  const id = req.params.id\n+\n+  Tutorial.findByIdAndUpdate(id, req.body, { useFindAndModify: false })\n+    .then(data => {\n+      if (!data) {\n+        res.status(404).send({\n+          message: `Cannot update Tutorial with id=${id}. Maybe Tutorial was not found!`\n+        })\n+      } else res.send({ message: \"Tutorial was updated successfully.\" })\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message: \"Error updating Tutorial with id=\" + id\n+      })\n+    })\n+}\n"
                },
                {
                    "date": 1686988406973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,11 @@\n         .send({ message: \"Error retrieving Todo with id=\" + id })\n     })\n }\n \n-// Update a Tutorial by the id in the request\n+// @route POST api/todos/:id \n+// @desc fetch a todo details\n+// @access Private\n exports.update = (req, res) => {\n   if (!req.body) {\n     return res.status(400).send({\n       message: \"Data to update can not be empty!\"\n"
                },
                {
                    "date": 1686988505719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         .send({ message: \"Error retrieving Todo with id=\" + id })\n     })\n }\n \n-// @route POST api/todos/:id \n+// @route PUT api/todos/:id \n // @desc fetch a todo details\n // @access Private\n exports.update = (req, res) => {\n   if (!req.body) {\n"
                },
                {
                    "date": 1686988514263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n     })\n }\n \n // @route PUT api/todos/:id \n-// @desc fetch a todo details\n+// @desc updae a todo details\n // @access Private\n exports.update = (req, res) => {\n   if (!req.body) {\n     return res.status(400).send({\n"
                },
                {
                    "date": 1686988534533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+const db = require(\"../models/index.js\")\n+\n+const Todo = db.todo\n+\n+// @route GET api/todos \n+// @desc Get all todos\n+// @access Private\n+exports.findAll = (req, res) => {\n+  const text = req.query.text\n+  var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n+\n+  Todo.find(condition).then(data => {\n+    res.send(data)\n+  }).catch(err => {\n+    res.status(500).send({\n+      message:\n+        err.message || \"Some error occurred while retrieving todos.\"\n+    })\n+  })\n+}\n+\n+// @route POST api/todos \n+// @desc create a todo\n+// @access Private\n+exports.create = (req, res) => {\n+\n+  // Validate request\n+  if(!req.body.text) {\n+    return res.status(400).send({ message: \"Content can not be empty!\" })\n+  }\n+\n+  // Create a todo\n+  const todo = new Todo({\n+    name: req.body.name,\n+    text: req.body.text,\n+    tags: req.body.tags,\n+    completed: req.body.completed ? req.body.completed : false\n+  })\n+\n+  // Save todo in the database\n+  todo\n+    .save(todo)\n+    .then(data => {\n+      res.send(data)\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message:\n+          err.message || \"Some error occurred while creating the todo.\"\n+      })\n+    })\n+}\n+\n+// @route POST api/todos/:id \n+// @desc fetch a todo details\n+// @access Private\n+exports.findOne = (req, res) => {\n+  const id = req.params.id\n+\n+  Todo.findById(id)\n+    .then(data => {\n+      if (!data)\n+        res.status(404).send({ message: \"Not found Todo with id \" + id })\n+      else res.send(data)\n+    })\n+    .catch(err => {\n+      res\n+        .status(500)\n+        .send({ message: \"Error retrieving Todo with id=\" + id })\n+    })\n+}\n+\n+// @route PUT api/todos/:id \n+// @desc update a todo details\n+// @access Private\n+exports.update = (req, res) => {\n+  if (!req.body) {\n+    return res.status(400).send({\n+      message: \"Data to update can not be empty!\"\n+    })\n+  }\n+\n+  const id = req.params.id\n+\n+  Todo.findByIdAndUpdate(id, req.body, { useFindAndModify: false })\n+    .then(data => {\n+      if (!data) {\n+        res.status(404).send({\n+          message: `Cannot update Tutorial with id=${id}. Maybe Tutorial was not found!`\n+        })\n+      } else res.send({ message: \"Tutorial was updated successfully.\" })\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message: \"Error updating Tutorial with id=\" + id\n+      })\n+    })\n+}\n"
                },
                {
                    "date": 1686988540043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n   Todo.findByIdAndUpdate(id, req.body, { useFindAndModify: false })\n     .then(data => {\n       if (!data) {\n         res.status(404).send({\n-          message: `Cannot update Tutorial with id=${id}. Maybe Tutorial was not found!`\n+          message: `Cannot update Todo with id=${id}. Maybe Tutorial was not found!`\n         })\n       } else res.send({ message: \"Tutorial was updated successfully.\" })\n     })\n     .catch(err => {\n@@ -95,102 +95,4 @@\n         message: \"Error updating Tutorial with id=\" + id\n       })\n     })\n }\n-const db = require(\"../models/index.js\")\n-\n-const Todo = db.todo\n-\n-// @route GET api/todos \n-// @desc Get all todos\n-// @access Private\n-exports.findAll = (req, res) => {\n-  const text = req.query.text\n-  var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n-\n-  Todo.find(condition).then(data => {\n-    res.send(data)\n-  }).catch(err => {\n-    res.status(500).send({\n-      message:\n-        err.message || \"Some error occurred while retrieving todos.\"\n-    })\n-  })\n-}\n-\n-// @route POST api/todos \n-// @desc create a todo\n-// @access Private\n-exports.create = (req, res) => {\n-\n-  // Validate request\n-  if(!req.body.text) {\n-    return res.status(400).send({ message: \"Content can not be empty!\" })\n-  }\n-\n-  // Create a todo\n-  const todo = new Todo({\n-    name: req.body.name,\n-    text: req.body.text,\n-    tags: req.body.tags,\n-    completed: req.body.completed ? req.body.completed : false\n-  })\n-\n-  // Save todo in the database\n-  todo\n-    .save(todo)\n-    .then(data => {\n-      res.send(data)\n-    })\n-    .catch(err => {\n-      res.status(500).send({\n-        message:\n-          err.message || \"Some error occurred while creating the todo.\"\n-      })\n-    })\n-}\n-\n-// @route POST api/todos/:id \n-// @desc fetch a todo details\n-// @access Private\n-exports.findOne = (req, res) => {\n-  const id = req.params.id\n-\n-  Todo.findById(id)\n-    .then(data => {\n-      if (!data)\n-        res.status(404).send({ message: \"Not found Todo with id \" + id })\n-      else res.send(data)\n-    })\n-    .catch(err => {\n-      res\n-        .status(500)\n-        .send({ message: \"Error retrieving Todo with id=\" + id })\n-    })\n-}\n-\n-// @route PUT api/todos/:id \n-// @desc updae a todo details\n-// @access Private\n-exports.update = (req, res) => {\n-  if (!req.body) {\n-    return res.status(400).send({\n-      message: \"Data to update can not be empty!\"\n-    })\n-  }\n-\n-  const id = req.params.id\n-\n-  Tutorial.findByIdAndUpdate(id, req.body, { useFindAndModify: false })\n-    .then(data => {\n-      if (!data) {\n-        res.status(404).send({\n-          message: `Cannot update Tutorial with id=${id}. Maybe Tutorial was not found!`\n-        })\n-      } else res.send({ message: \"Tutorial was updated successfully.\" })\n-    })\n-    .catch(err => {\n-      res.status(500).send({\n-        message: \"Error updating Tutorial with id=\" + id\n-      })\n-    })\n-}\n"
                },
                {
                    "date": 1686988545872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,14 +85,14 @@\n   Todo.findByIdAndUpdate(id, req.body, { useFindAndModify: false })\n     .then(data => {\n       if (!data) {\n         res.status(404).send({\n-          message: `Cannot update Todo with id=${id}. Maybe Tutorial was not found!`\n+          message: `Cannot update Todo with id=${id}. Maybe Todo was not found!`\n         })\n-      } else res.send({ message: \"Tutorial was updated successfully.\" })\n+      } else res.send({ message: \"Todo was updated successfully.\" })\n     })\n     .catch(err => {\n       res.status(500).send({\n-        message: \"Error updating Tutorial with id=\" + id\n+        message: \"Error updating Todo with id=\" + id\n       })\n     })\n }\n"
                },
                {
                    "date": 1686988680744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,4 +95,7 @@\n         message: \"Error updating Todo with id=\" + id\n       })\n     })\n }\n+\n+\n+\n"
                },
                {
                    "date": 1686988694592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,6 +96,29 @@\n       })\n     })\n }\n \n+// @route PUT api/todos/:id \n+// @desc update a todo details\n+// @access Private\n+exports.delete = (req, res) => {\n+  const id = req.params.id\n \n+  Tutorial.findByIdAndRemove(id, { useFindAndModify: false })\n+    .then(data => {\n+      if (!data) {\n+        res.status(404).send({\n+          message: `Cannot delete Tutorial with id=${id}. Maybe Tutorial was not found!`\n+        })\n+      } else {\n+        res.send({\n+          message: \"Tutorial was deleted successfully!\"\n+        })\n+      }\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message: \"Could not delete Tutorial with id=\" + id\n+      })\n+    })\n+}\n \n"
                },
                {
                    "date": 1686988707726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,10 +96,10 @@\n       })\n     })\n }\n \n-// @route PUT api/todos/:id \n-// @desc update a todo details\n+// @route DELETE api/todos/:id \n+// @desc delee a todo details\n // @access Private\n exports.delete = (req, res) => {\n   const id = req.params.id\n \n"
                },
                {
                    "date": 1686988722660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,14 +97,14 @@\n     })\n }\n \n // @route DELETE api/todos/:id \n-// @desc delee a todo details\n+// @desc delete a todo details\n // @access Private\n exports.delete = (req, res) => {\n   const id = req.params.id\n \n-  Tutorial.findByIdAndRemove(id, { useFindAndModify: false })\n+  Todo.findByIdAndRemove(id, { useFindAndModify: false })\n     .then(data => {\n       if (!data) {\n         res.status(404).send({\n           message: `Cannot delete Tutorial with id=${id}. Maybe Tutorial was not found!`\n"
                },
                {
                    "date": 1686988730285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n   Todo.findByIdAndRemove(id, { useFindAndModify: false })\n     .then(data => {\n       if (!data) {\n         res.status(404).send({\n-          message: `Cannot delete Tutorial with id=${id}. Maybe Tutorial was not found!`\n+          message: `Cannot delete Todo with id=${id}. Maybe Tutorial was not found!`\n         })\n       } else {\n         res.send({\n           message: \"Tutorial was deleted successfully!\"\n"
                },
                {
                    "date": 1686988735528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,19 +106,19 @@\n   Todo.findByIdAndRemove(id, { useFindAndModify: false })\n     .then(data => {\n       if (!data) {\n         res.status(404).send({\n-          message: `Cannot delete Todo with id=${id}. Maybe Tutorial was not found!`\n+          message: `Cannot delete Todo with id=${id}. Maybe Todo was not found!`\n         })\n       } else {\n         res.send({\n-          message: \"Tutorial was deleted successfully!\"\n+          message: \"Todo was deleted successfully!\"\n         })\n       }\n     })\n     .catch(err => {\n       res.status(500).send({\n-        message: \"Could not delete Tutorial with id=\" + id\n+        message: \"Could not delete Todo with id=\" + id\n       })\n     })\n }\n \n"
                },
                {
                    "date": 1686988828349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,4 +121,8 @@\n       })\n     })\n }\n \n+// @route DELETE api/todos/:id \n+// @desc delete a todo details\n+// @access Private\n+\n"
                },
                {
                    "date": 1686988838537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,5 +124,18 @@\n \n // @route DELETE api/todos/:id \n // @desc delete a todo details\n // @access Private\n-\n+exports.deleteAll = (req, res) => {\n+  Tutorial.deleteMany({})\n+    .then(data => {\n+      res.send({\n+        message: `${data.deletedCount} Tutorials were deleted successfully!`\n+      })\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message:\n+          err.message || \"Some error occurred while removing all tutorials.\"\n+      })\n+    })\n+}\n"
                },
                {
                    "date": 1686988844777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,10 +121,10 @@\n       })\n     })\n }\n \n-// @route DELETE api/todos/:id \n-// @desc delete a todo details\n+// @route DELETE api/todos/\n+// @desc delete aall todo details\n // @access Private\n exports.deleteAll = (req, res) => {\n   Tutorial.deleteMany({})\n     .then(data => {\n"
                },
                {
                    "date": 1686988859649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,12 +122,12 @@\n     })\n }\n \n // @route DELETE api/todos/\n-// @desc delete aall todo details\n+// @desc delete all todos details\n // @access Private\n exports.deleteAll = (req, res) => {\n-  Tutorial.deleteMany({})\n+  Todo.deleteMany({})\n     .then(data => {\n       res.send({\n         message: `${data.deletedCount} Tutorials were deleted successfully!`\n       })\n"
                },
                {
                    "date": 1686988869729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,14 +128,14 @@\n exports.deleteAll = (req, res) => {\n   Todo.deleteMany({})\n     .then(data => {\n       res.send({\n-        message: `${data.deletedCount} Tutorials were deleted successfully!`\n+        message: `${data.deletedCount} Todo were deleted successfully!`\n       })\n     })\n     .catch(err => {\n       res.status(500).send({\n         message:\n-          err.message || \"Some error occurred while removing all tutorials.\"\n+          err.message || \"Some error occurred while removing all Todo.\"\n       })\n     })\n }\n"
                },
                {
                    "date": 1686988938230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,4 +138,9 @@\n           err.message || \"Some error occurred while removing all Todo.\"\n       })\n     })\n }\n+\n+// @route DELETE api/todos/\n+// @desc delete all todos details\n+// @access Private\n+\n"
                },
                {
                    "date": 1686988947933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,5 +142,16 @@\n \n // @route DELETE api/todos/\n // @desc delete all todos details\n // @access Private\n-\n+exports.findAllPublished = (req, res) => {\n+  Tutorial.find({ published: true })\n+    .then(data => {\n+      res.send(data)\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message:\n+          err.message || \"Some error occurred while retrieving tutorials.\"\n+      })\n+    })\n+}\n"
                },
                {
                    "date": 1686988960905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n       })\n     })\n }\n \n-// @route DELETE api/todos/\n+// @route GET api/todos/\n // @desc delete all todos details\n // @access Private\n exports.findAllPublished = (req, res) => {\n   Tutorial.find({ published: true })\n"
                },
                {
                    "date": 1686988968645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n     })\n }\n \n // @route GET api/todos/\n-// @desc delete all todos details\n+// @desc completed all todos details\n // @access Private\n exports.findAllPublished = (req, res) => {\n   Tutorial.find({ published: true })\n     .then(data => {\n"
                },
                {
                    "date": 1686988976067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n \n // @route GET api/todos/\n // @desc completed all todos details\n // @access Private\n-exports.findAllPublished = (req, res) => {\n+exports.findAllCompleted = (req, res) => {\n   Tutorial.find({ published: true })\n     .then(data => {\n       res.send(data)\n     })\n"
                },
                {
                    "date": 1686988981989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/\n // @desc completed all todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Tutorial.find({ published: true })\n+  Tutorial.find({ completed: true })\n     .then(data => {\n       res.send(data)\n     })\n     .catch(err => {\n"
                },
                {
                    "date": 1686988988204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/\n // @desc completed all todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Tutorial.find({ completed: true })\n+  Todo.find({ completed: true })\n     .then(data => {\n       res.send(data)\n     })\n     .catch(err => {\n"
                },
                {
                    "date": 1686989425071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,8 +150,8 @@\n     })\n     .catch(err => {\n       res.status(500).send({\n         message:\n-          err.message || \"Some error occurred while retrieving tutorials.\"\n+          err.message || \"Some error occurred while retrieving Todo.\"\n       })\n     })\n }\n"
                },
                {
                    "date": 1686990179618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n       })\n     })\n }\n \n-// @route GET api/todos/\n+// @route GET api/todos/completed\n // @desc completed all todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n"
                },
                {
                    "date": 1686990313153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n     })\n }\n \n // @route GET api/todos/completed\n-// @desc completed all todos details\n+// @desc Fetch completed all todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n     .then(data => {\n"
                },
                {
                    "date": 1686990318563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n     })\n }\n \n // @route GET api/todos/completed\n-// @desc Fetch completed all todos details\n+// @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n     .then(data => {\n"
                },
                {
                    "date": 1686990425410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,16 +142,16 @@\n \n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n-exports.findAllCompleted = (req, res) => {\n-  Todo.find({ completed: true })\n+exports.findAllPublished = (req, res) => {\n+  Tutorial.find({ published: true })\n     .then(data => {\n       res.send(data)\n     })\n     .catch(err => {\n       res.status(500).send({\n         message:\n-          err.message || \"Some error occurred while retrieving Todo.\"\n+          err.message || \"Some error occurred while retrieving tutorials.\"\n       })\n     })\n }\n"
                },
                {
                    "date": 1686990432631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n \n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n-exports.findAllPublished = (req, res) => {\n+exports.findAllCompleted = (req, res) => {\n   Tutorial.find({ published: true })\n     .then(data => {\n       res.send(data)\n     })\n"
                },
                {
                    "date": 1686990438920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Tutorial.find({ published: true })\n+  Tutorial.find({ completed: true })\n     .then(data => {\n       res.send(data)\n     })\n     .catch(err => {\n"
                },
                {
                    "date": 1686990457624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,8 +150,8 @@\n     })\n     .catch(err => {\n       res.status(500).send({\n         message:\n-          err.message || \"Some error occurred while retrieving tutorials.\"\n+          err.message || \"Some error occurred while retrieving todos.\"\n       })\n     })\n }\n"
                },
                {
                    "date": 1686990705889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Tutorial.find({ completed: true })\n+  Todo.find({ completed: true })\n     .then(data => {\n       res.send(data)\n     })\n     .catch(err => {\n"
                },
                {
                    "date": 1686991575761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Todo.find({ completed: true })\n+  Todo.find({ completed: false })\n     .then(data => {\n       res.send(data)\n     })\n     .catch(err => {\n"
                },
                {
                    "date": 1686991609920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Todo.find({ completed: false })\n+  Todo.find({ completed: tr })\n     .then(data => {\n       res.send(data)\n     })\n     .catch(err => {\n"
                },
                {
                    "date": 1686991631975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,15 +143,7 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Todo.find({ completed: tr })\n-    .then(data => {\n-      res.send(data)\n-    })\n-    .catch(err => {\n-      res.status(500).send({\n-        message:\n-          err.message || \"Some error occurred while retrieving todos.\"\n-      })\n-    })\n+  Todo.find({ completed: true })\n+  \n }\n"
                },
                {
                    "date": 1686991638499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,6 +144,6 @@\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n-  \n+  console.log(Todo)\n }\n"
                },
                {
                    "date": 1686991715258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,7 +143,8 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n+  \n   Todo.find({ completed: true })\n   console.log(Todo)\n }\n"
                },
                {
                    "date": 1686991856402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,8 +143,7 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  \n   Todo.find({ completed: true })\n   console.log(Todo)\n }\n"
                },
                {
                    "date": 1686991861798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,6 +144,6 @@\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n-  console.log(Todo)\n+  .then\n }\n"
                },
                {
                    "date": 1686991871244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,6 +144,8 @@\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n-  .then\n+  .then(data => {\n+    res.send()\n+  })\n }\n"
                },
                {
                    "date": 1686991879205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,7 +145,7 @@\n // @access Private\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n   .then(data => {\n-    res.send()\n+    res.send(data)\n   })\n }\n"
                },
                {
                    "date": 1686991887677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,6 +146,6 @@\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n   .then(data => {\n     res.send(data)\n-  })\n+  }).catch(err => )\n }\n"
                },
                {
                    "date": 1686991895594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,6 +146,8 @@\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n   .then(data => {\n     res.send(data)\n-  }).catch(err => )\n+  }).catch(err => {\n+    res.status(500)\n+  })\n }\n"
                },
                {
                    "date": 1686991900866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,7 +147,7 @@\n   Todo.find({ completed: true })\n   .then(data => {\n     res.send(data)\n   }).catch(err => {\n-    res.status(500)\n+    res.status(500).send ()\n   })\n }\n"
                },
                {
                    "date": 1686991907244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,7 +147,9 @@\n   Todo.find({ completed: true })\n   .then(data => {\n     res.send(data)\n   }).catch(err => {\n-    res.status(500).send ()\n+    res.status(500).send ({\n+      message: err.\n+    })\n   })\n }\n"
                },
                {
                    "date": 1686991912872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,8 +148,8 @@\n   .then(data => {\n     res.send(data)\n   }).catch(err => {\n     res.status(500).send ({\n-      message: err.\n+      message: err.message \n     })\n   })\n }\n"
                },
                {
                    "date": 1686991926753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,8 +148,8 @@\n   .then(data => {\n     res.send(data)\n   }).catch(err => {\n     res.status(500).send ({\n-      message: err.message \n+      message: err.message || \"Some error occurred while retrieving tutorials.\"\n     })\n   })\n }\n"
                },
                {
                    "date": 1686991938693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,12 +144,12 @@\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n-  .then(data => {\n-    res.send(data)\n-  }).catch(err => {\n-    res.status(500).send ({\n-      message: err.message || \"Some error occurred while retrieving tutorials.\"\n+    .then(data => {\n+      res.send(data)\n+    }).catch(err => {\n+      res.status(500).send ({\n+        message: err.message || \"Some error occurred while retrieving todos.\"\n+      })\n     })\n-  })\n }\n"
                },
                {
                    "date": 1687010108714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,4 +152,18 @@\n         message: err.message || \"Some error occurred while retrieving todos.\"\n       })\n     })\n }\n+\n+// @route GET api/todos/completed\n+// @desc Fetch all completed todos details\n+// @access Private\n+exports.findAllCompleted = (req, res) => {\n+  Todo.find({ completed: true })\n+    .then(data => {\n+      res.send(data)\n+    }).catch(err => {\n+      res.status(500).send ({\n+        message: err.message || \"Some error occurred while retrieving todos.\"\n+      })\n+    })\n+}\n"
                },
                {
                    "date": 1687010130833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,9 @@\n       })\n     })\n }\n \n-// @route GET api/todos/completed\n+// @route GET api/todos/incompleted\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n   Todo.find({ completed: true })\n"
                },
                {
                    "date": 1687010136266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,9 @@\n \n // @route GET api/todos/incompleted\n // @desc Fetch all completed todos details\n // @access Private\n-exports.findAllCompleted = (req, res) => {\n+exports.findAllInCompleted = (req, res) => {\n   Todo.find({ completed: true })\n     .then(data => {\n       res.send(data)\n     }).catch(err => {\n"
                },
                {
                    "date": 1687010153379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,12 +154,12 @@\n     })\n }\n \n // @route GET api/todos/incompleted\n-// @desc Fetch all completed todos details\n+// @desc Fetch all incompleted todos details\n // @access Private\n exports.findAllInCompleted = (req, res) => {\n-  Todo.find({ completed: true })\n+  Todo.find({ completed: false })\n     .then(data => {\n       res.send(data)\n     }).catch(err => {\n       res.status(500).send ({\n"
                },
                {
                    "date": 1687010206583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,9 @@\n       })\n     })\n }\n \n-// @route GET api/todos/incompleted\n+// @route GET api/todos/incomplete\n // @desc Fetch all incompleted todos details\n // @access Private\n exports.findAllInCompleted = (req, res) => {\n   Todo.find({ completed: false })\n"
                },
                {
                    "date": 1687156605183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Todo.find({ completed: true })\n+  Todo.find({ Completed: true })\n     .then(data => {\n       res.send(data)\n     }).catch(err => {\n       res.status(500).send ({\n"
                },
                {
                    "date": 1687156618366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Todo.find({ Completed: true })\n+  Todo.find({ completed: true })\n     .then(data => {\n       res.send(data)\n     }).catch(err => {\n       res.status(500).send ({\n"
                },
                {
                    "date": 1687156638023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Todo.find({ completed: true })\n+  Todo.find({ completed: 1 })\n     .then(data => {\n       res.send(data)\n     }).catch(err => {\n       res.status(500).send ({\n"
                },
                {
                    "date": 1687156644657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  Todo.find({ completed: 1 })\n+  Todo.find({ completed: true })\n     .then(data => {\n       res.send(data)\n     }).catch(err => {\n       res.status(500).send ({\n"
                },
                {
                    "date": 1687156660768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,8 +143,9 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n+  \n   Todo.find({ completed: true })\n     .then(data => {\n       res.send(data)\n     }).catch(err => {\n"
                },
                {
                    "date": 1687156667400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n // @route GET api/todos/completed\n // @desc Fetch all completed todos details\n // @access Private\n exports.findAllCompleted = (req, res) => {\n-  \n+  console.log(req)\n   Todo.find({ completed: true })\n     .then(data => {\n       res.send(data)\n     }).catch(err => {\n"
                }
            ],
            "date": 1686983649811,
            "name": "Commit-0",
            "content": "todo.controller.js"
        }
    ]
}