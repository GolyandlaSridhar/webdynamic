{
    "sourceFile": "controllers/tag.controller.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 35,
            "patches": [
                {
                    "date": 1687010454042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1687010712930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,4 @@\n-tag.controller.js\n\\ No newline at end of file\n+const db = require(\"../models/index.js\")\n+\n+const Todo = db.todo\n+\n"
                },
                {
                    "date": 1687010719944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,20 @@\n const db = require(\"../models/index.js\")\n \n const Todo = db.todo\n \n+// @route GET api/todos \n+// @desc Get all todos\n+// @access Private\n+exports.findAll = (req, res) => {\n+  const text = req.query.text\n+  var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n+\n+  Todo.find(condition).then(data => {\n+    res.send(data)\n+  }).catch(err => {\n+    res.status(500).send({\n+      message:\n+        err.message || \"Some error occurred while retrieving todos.\"\n+    })\n+  })\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1687010727935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n const db = require(\"../models/index.js\")\n \n const Todo = db.todo\n \n-// @route GET api/todos \n-// @desc Get all todos\n+// @route GET api/tags/ \n+// @desc Get all a\n // @access Private\n exports.findAll = (req, res) => {\n   const text = req.query.text\n   var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n"
                },
                {
                    "date": 1687010742099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,12 @@\n \n const Todo = db.todo\n \n // @route GET api/tags/ \n-// @desc Get all a\n+// @desc Get all tags\n // @access Private\n exports.findAll = (req, res) => {\n-  const text = req.query.text\n+  const name = req.query.text\n   var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n \n   Todo.find(condition).then(data => {\n     res.send(data)\n"
                },
                {
                    "date": 1687010750849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n // @route GET api/tags/ \n // @desc Get all tags\n // @access Private\n exports.findAll = (req, res) => {\n-  const name = req.query.text\n-  var condition = text ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n+  const name = req.query.name\n+  var condition = name ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n \n   Todo.find(condition).then(data => {\n     res.send(data)\n   }).catch(err => {\n"
                },
                {
                    "date": 1687010757700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n // @desc Get all tags\n // @access Private\n exports.findAll = (req, res) => {\n   const name = req.query.name\n-  var condition = name ? { text: { $regex: new RegExp(text), $options: \"i\" } } : {}\n+  var condition = name ? { name: { $regex: new RegExp(name), $options: \"i\" } } : {}\n \n   Todo.find(condition).then(data => {\n     res.send(data)\n   }).catch(err => {\n"
                },
                {
                    "date": 1687010767744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const db = require(\"../models/index.js\")\n \n-const Todo = db.todo\n+const Tag = db.todo\n \n // @route GET api/tags/ \n // @desc Get all tags\n // @access Private\n"
                },
                {
                    "date": 1687010777389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n const db = require(\"../models/index.js\")\n \n-const Tag = db.todo\n+const Tag = db.tag\n \n // @route GET api/tags/ \n // @desc Get all tags\n // @access Private\n exports.findAll = (req, res) => {\n   const name = req.query.name\n   var condition = name ? { name: { $regex: new RegExp(name), $options: \"i\" } } : {}\n \n-  Todo.find(condition).then(data => {\n+  Tag.find(condition).then(data => {\n     res.send(data)\n   }).catch(err => {\n     res.status(500).send({\n       message:\n"
                },
                {
                    "date": 1687010788787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,8 @@\n     res.send(data)\n   }).catch(err => {\n     res.status(500).send({\n       message:\n-        err.message || \"Some error occurred while retrieving todos.\"\n+        err.message || \"Some error occurred while retrieving tags.\"\n     })\n   })\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1687010806778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,5 +16,37 @@\n       message:\n         err.message || \"Some error occurred while retrieving tags.\"\n     })\n   })\n+}\n+\n+// @route POST api/todos \n+// @desc create a todo\n+// @access Private\n+exports.create = (req, res) => {\n+\n+  // Validate request\n+  if(!req.body.text) {\n+    return res.status(400).send({ message: \"Content can not be empty!\" })\n+  }\n+\n+  // Create a todo\n+  const todo = new Todo({\n+    name: req.body.name,\n+    text: req.body.text,\n+    tags: req.body.tags,\n+    completed: req.body.completed ? req.body.completed : false\n+  })\n+\n+  // Save todo in the database\n+  todo\n+    .save(todo)\n+    .then(data => {\n+      res.send(data)\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message:\n+          err.message || \"Some error occurred while creating the todo.\"\n+      })\n+    })\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1687010814048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     })\n   })\n }\n \n-// @route POST api/todos \n+// @route POST api/tags \n // @desc create a todo\n // @access Private\n exports.create = (req, res) => {\n \n"
                },
                {
                    "date": 1687010823279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,14 +19,14 @@\n   })\n }\n \n // @route POST api/tags \n-// @desc create a todo\n+// @desc create a tag\n // @access Private\n exports.create = (req, res) => {\n \n   // Validate request\n-  if(!req.body.text) {\n+  if(!req.body.name) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n \n   // Create a todo\n"
                },
                {
                    "date": 1687010830611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n   if(!req.body.name) {\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n \n-  // Create a todo\n+  // Create a tag\n   const todo = new Todo({\n     name: req.body.name,\n     text: req.body.text,\n     tags: req.body.tags,\n"
                },
                {
                    "date": 1687010837276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     return res.status(400).send({ message: \"Content can not be empty!\" })\n   }\n \n   // Create a tag\n-  const todo = new Todo({\n+  const tag = new Tag({\n     name: req.body.name,\n     text: req.body.text,\n     tags: req.body.tags,\n     completed: req.body.completed ? req.body.completed : false\n"
                },
                {
                    "date": 1687010844299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,11 +31,8 @@\n \n   // Create a tag\n   const tag = new Tag({\n     name: req.body.name,\n-    text: req.body.text,\n-    tags: req.body.tags,\n-    completed: req.body.completed ? req.body.completed : false\n   })\n \n   // Save todo in the database\n   todo\n"
                },
                {
                    "date": 1687010859445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,13 @@\n   }\n \n   // Create a tag\n   const tag = new Tag({\n-    name: req.body.name,\n+    name: req.body.name\n   })\n \n   // Save todo in the database\n-  todo\n+  ta\n     .save(todo)\n     .then(data => {\n       res.send(data)\n     })\n"
                },
                {
                    "date": 1687010866166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,10 @@\n     name: req.body.name\n   })\n \n   // Save todo in the database\n-  ta\n-    .save(todo)\n+  tag\n+    .save(tag)\n     .then(data => {\n       res.send(data)\n     })\n     .catch(err => {\n"
                },
                {
                    "date": 1687011104536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,97 @@\n     })\n     .catch(err => {\n       res.status(500).send({\n         message:\n-          err.message || \"Some error occurred while creating the todo.\"\n+          err.message || \"Some error occurred while creating the tag.\"\n       })\n     })\n+}\n+\n+// @route POST api/todos/:id \n+// @desc fetch a todo details\n+// @access Private\n+exports.findOne = (req, res) => {\n+  const id = req.params.id\n+\n+  Todo.findById(id)\n+    .then(data => {\n+      if (!data)\n+        res.status(404).send({ message: \"Not found Todo with id \" + id })\n+      else res.send(data)\n+    })\n+    .catch(err => {\n+      res\n+        .status(500)\n+        .send({ message: \"Error retrieving Todo with id=\" + id })\n+    })\n+}\n+\n+// @route PUT api/todos/:id \n+// @desc update a todo details\n+// @access Private\n+exports.update = (req, res) => {\n+  if (!req.body) {\n+    return res.status(400).send({\n+      message: \"Data to update can not be empty!\"\n+    })\n+  }\n+\n+  const id = req.params.id\n+\n+  Todo.findByIdAndUpdate(id, req.body, { useFindAndModify: false })\n+    .then(data => {\n+      if (!data) {\n+        res.status(404).send({\n+          message: `Cannot update Todo with id=${id}. Maybe Todo was not found!`\n+        })\n+      } else res.send({ message: \"Todo was updated successfully.\" })\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message: \"Error updating Todo with id=\" + id\n+      })\n+    })\n+}\n+\n+// @route DELETE api/todos/:id \n+// @desc delete a todo details\n+// @access Private\n+exports.delete = (req, res) => {\n+  const id = req.params.id\n+\n+  Todo.findByIdAndRemove(id, { useFindAndModify: false })\n+    .then(data => {\n+      if (!data) {\n+        res.status(404).send({\n+          message: `Cannot delete Todo with id=${id}. Maybe Todo was not found!`\n+        })\n+      } else {\n+        res.send({\n+          message: \"Todo was deleted successfully!\"\n+        })\n+      }\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message: \"Could not delete Todo with id=\" + id\n+      })\n+    })\n+}\n+\n+// @route DELETE api/todos/\n+// @desc delete all todos details\n+// @access Private\n+exports.deleteAll = (req, res) => {\n+  Todo.deleteMany({})\n+    .then(data => {\n+      res.send({\n+        message: `${data.deletedCount} Todo were deleted successfully!`\n+      })\n+    })\n+    .catch(err => {\n+      res.status(500).send({\n+        message:\n+          err.message || \"Some error occurred while removing all Todo.\"\n+      })\n+    })\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1687011119777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n       })\n     })\n }\n \n-// @route POST api/todos/:id \n+// @route POST api/tags/:id \n // @desc fetch a todo details\n // @access Private\n exports.findOne = (req, res) => {\n   const id = req.params.id\n"
                },
                {
                    "date": 1687011129719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,14 +48,14 @@\n     })\n }\n \n // @route POST api/tags/:id \n-// @desc fetch a todo details\n+// @desc fetch a tag details\n // @access Private\n exports.findOne = (req, res) => {\n   const id = req.params.id\n \n-  Todo.findById(id)\n+  T.findById(id)\n     .then(data => {\n       if (!data)\n         res.status(404).send({ message: \"Not found Todo with id \" + id })\n       else res.send(data)\n"
                },
                {
                    "date": 1687011135508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,12 +53,12 @@\n // @access Private\n exports.findOne = (req, res) => {\n   const id = req.params.id\n \n-  T.findById(id)\n+  Tag.findById(id)\n     .then(data => {\n       if (!data)\n-        res.status(404).send({ message: \"Not found Todo with id \" + id })\n+        res.status(404).send({ message: \"Not found Tag with id \" + id })\n       else res.send(data)\n     })\n     .catch(err => {\n       res\n"
                },
                {
                    "date": 1687011166321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,13 +62,13 @@\n     })\n     .catch(err => {\n       res\n         .status(500)\n-        .send({ message: \"Error retrieving Todo with id=\" + id })\n+        .send({ message: \"Error retrieving Tag with id=\" + id })\n     })\n }\n \n-// @route PUT api/todos/:id \n+// @route PUT api/tags/:id \n // @desc update a todo details\n // @access Private\n exports.update = (req, res) => {\n   if (!req.body) {\n"
                },
                {
                    "date": 1687011180471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     })\n }\n \n // @route PUT api/tags/:id \n-// @desc update a todo details\n+// @desc update a tag details\n // @access Private\n exports.update = (req, res) => {\n   if (!req.body) {\n     return res.status(400).send({\n@@ -78,9 +78,9 @@\n   }\n \n   const id = req.params.id\n \n-  Todo.findByIdAndUpdate(id, req.body, { useFindAndModify: false })\n+  Tag.findByIdAndUpdate(id, req.body, { useFindAndModify: false })\n     .then(data => {\n       if (!data) {\n         res.status(404).send({\n           message: `Cannot update Todo with id=${id}. Maybe Todo was not found!`\n"
                },
                {
                    "date": 1687011188434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n   Tag.findByIdAndUpdate(id, req.body, { useFindAndModify: false })\n     .then(data => {\n       if (!data) {\n         res.status(404).send({\n-          message: `Cannot update Todo with id=${id}. Maybe Todo was not found!`\n+          message: `Cannot update Tag with id=${id}. Maybe Todo was not found!`\n         })\n       } else res.send({ message: \"Todo was updated successfully.\" })\n     })\n     .catch(err => {\n"
                },
                {
                    "date": 1687011193934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,11 +82,11 @@\n   Tag.findByIdAndUpdate(id, req.body, { useFindAndModify: false })\n     .then(data => {\n       if (!data) {\n         res.status(404).send({\n-          message: `Cannot update Tag with id=${id}. Maybe Todo was not found!`\n+          message: `Cannot update Tag with id=${id}. Maybe Tag was not found!`\n         })\n-      } else res.send({ message: \"Todo was updated successfully.\" })\n+      } else res.send({ message: \"Tag was updated successfully.\" })\n     })\n     .catch(err => {\n       res.status(500).send({\n         message: \"Error updating Todo with id=\" + id\n"
                },
                {
                    "date": 1687011201119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n       } else res.send({ message: \"Tag was updated successfully.\" })\n     })\n     .catch(err => {\n       res.status(500).send({\n-        message: \"Error updating Todo with id=\" + id\n+        message: \"Error updating Tag with id=\" + id\n       })\n     })\n }\n \n"
                },
                {
                    "date": 1687011207689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n       })\n     })\n }\n \n-// @route DELETE api/todos/:id \n+// @route DELETE api/tags/:id \n // @desc delete a todo details\n // @access Private\n exports.delete = (req, res) => {\n   const id = req.params.id\n"
                },
                {
                    "date": 1687011217710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,14 +94,14 @@\n     })\n }\n \n // @route DELETE api/tags/:id \n-// @desc delete a todo details\n+// @desc delete a tag details\n // @access Private\n exports.delete = (req, res) => {\n   const id = req.params.id\n \n-  Todo.findByIdAndRemove(id, { useFindAndModify: false })\n+  Tag.findByIdAndRemove(id, { useFindAndModify: false })\n     .then(data => {\n       if (!data) {\n         res.status(404).send({\n           message: `Cannot delete Todo with id=${id}. Maybe Todo was not found!`\n"
                },
                {
                    "date": 1687011225169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n   Tag.findByIdAndRemove(id, { useFindAndModify: false })\n     .then(data => {\n       if (!data) {\n         res.status(404).send({\n-          message: `Cannot delete Todo with id=${id}. Maybe Todo was not found!`\n+          message: `Cannot delete Tag with id=${id}. Maybe Tag was not found!`\n         })\n       } else {\n         res.send({\n           message: \"Todo was deleted successfully!\"\n"
                },
                {
                    "date": 1687011233018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,15 +107,15 @@\n           message: `Cannot delete Tag with id=${id}. Maybe Tag was not found!`\n         })\n       } else {\n         res.send({\n-          message: \"Todo was deleted successfully!\"\n+          message: \"Tag was deleted successfully!\"\n         })\n       }\n     })\n     .catch(err => {\n       res.status(500).send({\n-        message: \"Could not delete Todo with id=\" + id\n+        message: \"Could not delete Tag with id=\" + id\n       })\n     })\n }\n \n"
                },
                {
                    "date": 1687011250927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n       })\n     })\n }\n \n-// @route DELETE api/todos/\n+// @route DELETE api/tags/\n // @desc delete all todos details\n // @access Private\n exports.deleteAll = (req, res) => {\n   Todo.deleteMany({})\n"
                },
                {
                    "date": 1687011258136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n     })\n }\n \n // @route DELETE api/tags/\n-// @desc delete all todos details\n+// @desc delete all tag details\n // @access Private\n exports.deleteAll = (req, res) => {\n   Todo.deleteMany({})\n     .then(data => {\n"
                },
                {
                    "date": 1687011267580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,12 +122,12 @@\n // @route DELETE api/tags/\n // @desc delete all tag details\n // @access Private\n exports.deleteAll = (req, res) => {\n-  Todo.deleteMany({})\n+  Tag.deleteMany({})\n     .then(data => {\n       res.send({\n-        message: `${data.deletedCount} Todo were deleted successfully!`\n+        message: `${data.deletedCount} Tag were deleted successfully!`\n       })\n     })\n     .catch(err => {\n       res.status(500).send({\n"
                },
                {
                    "date": 1687011274159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,8 +131,8 @@\n     })\n     .catch(err => {\n       res.status(500).send({\n         message:\n-          err.message || \"Some error occurred while removing all Todo.\"\n+          err.message || \"Some error occurred while removing all Tag.\"\n       })\n     })\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1687011405460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n       })\n     })\n }\n \n-// @route POST api/tags/:id \n+// @route GET api/tags/:id \n // @desc fetch a tag details\n // @access Private\n exports.findOne = (req, res) => {\n   const id = req.params.id\n"
                }
            ],
            "date": 1687010454042,
            "name": "Commit-0",
            "content": "tag.controller.js"
        }
    ]
}